[HIT] ucp_config_read
#0  ucp_config_read (env_prefix=0x732586cea45b "TORCH", filename=0x0, config_p=0x7ffd0a04a8b8) at core/ucp_context.c:685
#1  0x0000732586cc215b in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#2  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#3  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#4  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#5  0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#6  0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#7  0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#8  0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#9  0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#10 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#11 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#12 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#13 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#14 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#15 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#16 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#17 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#18 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#19 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#20 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#21 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#22 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#23 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#24 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#25 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#26 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#27 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#28 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#29 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#30 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#31 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#32 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#33 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#34 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#35 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#36 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#37 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#38 0x00000000005bcc43 in _start ()
---
[HIT] ucp_init_version
#0  ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2264
#1  0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#2  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#3  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#4  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#5  0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#6  0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#7  0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#8  0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#9  0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#10 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#11 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#12 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#13 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#14 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#15 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#16 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#17 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#18 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#19 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#20 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#21 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#22 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#23 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#24 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#25 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#26 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#27 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#28 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#29 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#30 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#31 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#32 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#33 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#34 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#35 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#36 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#37 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#38 0x00000000005bcc43 in _start ()
---
[HIT] ucp_get_version_string
#0  ucp_get_version_string () at core/ucp_version.c:17
#1  0x00007324af03ecf5 in ucp_version_check (api_major_version=1, api_minor_version=18) at core/ucp_context.c:2240
#2  0x00007324af03ee8a in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2269
#3  0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#4  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#5  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#6  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#7  0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#9  0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#10 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#11 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#12 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#13 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#14 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#15 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#16 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#17 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#18 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#19 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#20 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#21 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#22 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#23 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#24 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#25 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#26 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#27 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#28 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#29 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#30 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#31 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#32 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#33 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#34 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#35 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#36 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#37 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#38 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#39 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#40 0x00000000005bcc43 in _start ()
---
[HIT] uct_md_open
#0  uct_md_open (component=0x732579afda80 <uct_self_component>, md_name=0x7ffd0a04a4e0 "self", config=0x2d048eb0, md_p=0x2d049370) at base/uct_md.c:57
#1  0x00007324af03b7f4 in ucp_fill_tl_md (context=0x2d040fc0, cmpt_index=0 '\000', md_rsc=0x7ffd0a04a4e0, tl_md=0x2d049370) at core/ucp_context.c:1379
#2  0x00007324af03c338 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=0 '\000', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1574
#3  0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#4  0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#5  0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#6  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#7  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#10 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#11 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#12 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#13 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#14 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#15 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#16 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#17 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#18 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#19 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#20 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#21 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#22 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#23 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#24 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#25 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#26 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#27 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#28 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#29 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#30 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#31 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#32 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#33 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#34 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#35 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#36 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#37 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#38 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#39 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#40 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#41 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#42 0x00000000005bcc43 in _start ()
---
[HIT] uct_md_close
#0  uct_md_close (md=0x27867c40) at base/uct_md.c:75
#1  0x00007324af03c8c4 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=1 '\001', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1649
#2  0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#3  0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#4  0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#5  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#6  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#7  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#10 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#11 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#12 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#13 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#14 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#15 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#16 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#17 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#18 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#19 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#20 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#21 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#22 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#23 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#24 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#25 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#26 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#27 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#28 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#29 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#30 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#31 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#32 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#33 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#34 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#35 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#36 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#37 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#38 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#39 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#40 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#41 0x00000000005bcc43 in _start ()
---
[HIT] ucm_sbrk
#0  ucm_sbrk (increment=339968) at event/event.c:385
#1  0x00007325d7498064 in ucm_override_sbrk (arg0=339968) at util/replace.c:58
#2  0x00007325daaaaa26 in __glibc_morecore (increment=increment@entry=339968) at ./malloc/morecore.c:29
#3  0x00007325daaacbf7 in sysmalloc (av=0x7325dac03ac0 <main_arena>, nb=267984) at ./malloc/malloc.c:2709
#4  _int_malloc (av=av@entry=0x7325dac03ac0 <main_arena>, bytes=bytes@entry=267968) at ./malloc/malloc.c:4481
#5  0x00007325daaae87e in __libc_calloc (n=<optimized out>, elem_size=<optimized out>) at ./malloc/malloc.c:3754
#6  0x000073255bbf777d in _verbs_init_and_alloc_context () from /lib/x86_64-linux-gnu/libibverbs.so.1
#7  0x00007324af3671b2 in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#8  0x00007324af36846f in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#9  0x000073255bbf7a33 in verbs_open_device () from /lib/x86_64-linux-gnu/libibverbs.so.1
#10 0x000073249e860c6a in uct_ib_mlx5_devx_open_device (ibv_device=0x2d048ad0) at dv/ib_mlx5dv_md.c:1783
#11 0x000073249e8622e6 in uct_ib_mlx5_devx_md_open (ibv_device=0x2d048ad0, md_config=0x2d053270, p_md=0x7ffd0a04a368) at dv/ib_mlx5dv_md.c:2206
#12 0x00007325516ae60e in uct_ib_component_md_open (ib_device=0x2d048ad0, md_config=0x2d053270, md_name=0x7ffd0a04a4e0 "mlx5_0", md_p=0x7ffd0a04a3c8) at base/ib_md.c:1031
#13 0x00007325516aeab3 in uct_ib_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", uct_md_config=0x2d053270, md_p=0x7ffd0a04a430) at base/ib_md.c:1126
#14 0x0000732579aacd7e in uct_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", config=0x2d053270, md_p=0x2d049ed8) at base/uct_md.c:61
#15 0x00007324af03b7f4 in ucp_fill_tl_md (context=0x2d040fc0, cmpt_index=6 '\006', md_rsc=0x7ffd0a04a4e0, tl_md=0x2d049ed8) at core/ucp_context.c:1379
#16 0x00007324af03c338 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=6 '\006', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1574
#17 0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#18 0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#19 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#20 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#21 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#22 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#23 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#24 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#25 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#26 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#27 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#28 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#29 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#30 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#31 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#32 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#33 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#34 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#35 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#36 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#37 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#38 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#39 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#40 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#41 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#42 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#43 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#44 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#45 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#46 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#47 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#48 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#49 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
---
[HIT] ucm_event_enter
#0  ucm_event_enter () at event/event.c:163
#1  0x00007325d7491644 in ucm_sbrk (increment=339968) at event/event.c:388
#2  0x00007325d7498064 in ucm_override_sbrk (arg0=339968) at util/replace.c:58
#3  0x00007325daaaaa26 in __glibc_morecore (increment=increment@entry=339968) at ./malloc/morecore.c:29
#4  0x00007325daaacbf7 in sysmalloc (av=0x7325dac03ac0 <main_arena>, nb=267984) at ./malloc/malloc.c:2709
#5  _int_malloc (av=av@entry=0x7325dac03ac0 <main_arena>, bytes=bytes@entry=267968) at ./malloc/malloc.c:4481
#6  0x00007325daaae87e in __libc_calloc (n=<optimized out>, elem_size=<optimized out>) at ./malloc/malloc.c:3754
#7  0x000073255bbf777d in _verbs_init_and_alloc_context () from /lib/x86_64-linux-gnu/libibverbs.so.1
#8  0x00007324af3671b2 in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#9  0x00007324af36846f in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#10 0x000073255bbf7a33 in verbs_open_device () from /lib/x86_64-linux-gnu/libibverbs.so.1
#11 0x000073249e860c6a in uct_ib_mlx5_devx_open_device (ibv_device=0x2d048ad0) at dv/ib_mlx5dv_md.c:1783
#12 0x000073249e8622e6 in uct_ib_mlx5_devx_md_open (ibv_device=0x2d048ad0, md_config=0x2d053270, p_md=0x7ffd0a04a368) at dv/ib_mlx5dv_md.c:2206
#13 0x00007325516ae60e in uct_ib_component_md_open (ib_device=0x2d048ad0, md_config=0x2d053270, md_name=0x7ffd0a04a4e0 "mlx5_0", md_p=0x7ffd0a04a3c8) at base/ib_md.c:1031
#14 0x00007325516aeab3 in uct_ib_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", uct_md_config=0x2d053270, md_p=0x7ffd0a04a430) at base/ib_md.c:1126
#15 0x0000732579aacd7e in uct_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", config=0x2d053270, md_p=0x2d049ed8) at base/uct_md.c:61
#16 0x00007324af03b7f4 in ucp_fill_tl_md (context=0x2d040fc0, cmpt_index=6 '\006', md_rsc=0x7ffd0a04a4e0, tl_md=0x2d049ed8) at core/ucp_context.c:1379
#17 0x00007324af03c338 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=6 '\006', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1574
#18 0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#19 0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#20 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#21 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#22 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#23 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#24 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#25 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#26 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#27 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#28 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#29 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#30 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#31 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#32 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#33 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#34 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#35 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#36 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#37 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#38 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#39 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#40 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#41 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#42 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#43 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#44 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#45 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#46 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#47 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#48 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#49 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
---
[HIT] ucm_event_dispatch
#0  ucm_event_dispatch (event_type=UCM_EVENT_SBRK, event=0x7ffd0a049d40) at event/event.c:143
#1  0x00007325d749176c in ucm_sbrk (increment=339968) at event/event.c:400
#2  0x00007325d7498064 in ucm_override_sbrk (arg0=339968) at util/replace.c:58
#3  0x00007325daaaaa26 in __glibc_morecore (increment=increment@entry=339968) at ./malloc/morecore.c:29
#4  0x00007325daaacbf7 in sysmalloc (av=0x7325dac03ac0 <main_arena>, nb=267984) at ./malloc/malloc.c:2709
#5  _int_malloc (av=av@entry=0x7325dac03ac0 <main_arena>, bytes=bytes@entry=267968) at ./malloc/malloc.c:4481
#6  0x00007325daaae87e in __libc_calloc (n=<optimized out>, elem_size=<optimized out>) at ./malloc/malloc.c:3754
#7  0x000073255bbf777d in _verbs_init_and_alloc_context () from /lib/x86_64-linux-gnu/libibverbs.so.1
#8  0x00007324af3671b2 in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#9  0x00007324af36846f in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#10 0x000073255bbf7a33 in verbs_open_device () from /lib/x86_64-linux-gnu/libibverbs.so.1
#11 0x000073249e860c6a in uct_ib_mlx5_devx_open_device (ibv_device=0x2d048ad0) at dv/ib_mlx5dv_md.c:1783
#12 0x000073249e8622e6 in uct_ib_mlx5_devx_md_open (ibv_device=0x2d048ad0, md_config=0x2d053270, p_md=0x7ffd0a04a368) at dv/ib_mlx5dv_md.c:2206
#13 0x00007325516ae60e in uct_ib_component_md_open (ib_device=0x2d048ad0, md_config=0x2d053270, md_name=0x7ffd0a04a4e0 "mlx5_0", md_p=0x7ffd0a04a3c8) at base/ib_md.c:1031
#14 0x00007325516aeab3 in uct_ib_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", uct_md_config=0x2d053270, md_p=0x7ffd0a04a430) at base/ib_md.c:1126
#15 0x0000732579aacd7e in uct_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", config=0x2d053270, md_p=0x2d049ed8) at base/uct_md.c:61
#16 0x00007324af03b7f4 in ucp_fill_tl_md (context=0x2d040fc0, cmpt_index=6 '\006', md_rsc=0x7ffd0a04a4e0, tl_md=0x2d049ed8) at core/ucp_context.c:1379
#17 0x00007324af03c338 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=6 '\006', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1574
#18 0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#19 0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#20 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#21 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#22 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#23 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#24 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#25 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#26 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#27 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#28 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#29 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#30 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#31 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#32 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#33 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#34 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#35 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#36 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#37 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#38 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#39 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#40 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#41 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#42 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#43 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#44 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#45 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#46 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#47 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#48 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#49 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
---
[HIT] ucm_orig_sbrk
#0  ucm_orig_sbrk (increment=339968) at util/replace.c:147
#1  0x00007325d749058f in ucm_event_call_orig (event_type=UCM_EVENT_SBRK, event=0x7ffd0a049d40, arg=0x0) at event/event.c:106
#2  0x00007325d7490682 in ucm_event_dispatch (event_type=UCM_EVENT_SBRK, event=0x7ffd0a049d40) at event/event.c:145
#3  0x00007325d749176c in ucm_sbrk (increment=339968) at event/event.c:400
#4  0x00007325d7498064 in ucm_override_sbrk (arg0=339968) at util/replace.c:58
#5  0x00007325daaaaa26 in __glibc_morecore (increment=increment@entry=339968) at ./malloc/morecore.c:29
#6  0x00007325daaacbf7 in sysmalloc (av=0x7325dac03ac0 <main_arena>, nb=267984) at ./malloc/malloc.c:2709
#7  _int_malloc (av=av@entry=0x7325dac03ac0 <main_arena>, bytes=bytes@entry=267968) at ./malloc/malloc.c:4481
#8  0x00007325daaae87e in __libc_calloc (n=<optimized out>, elem_size=<optimized out>) at ./malloc/malloc.c:3754
#9  0x000073255bbf777d in _verbs_init_and_alloc_context () from /lib/x86_64-linux-gnu/libibverbs.so.1
#10 0x00007324af3671b2 in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#11 0x00007324af36846f in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#12 0x000073255bbf7a33 in verbs_open_device () from /lib/x86_64-linux-gnu/libibverbs.so.1
#13 0x000073249e860c6a in uct_ib_mlx5_devx_open_device (ibv_device=0x2d048ad0) at dv/ib_mlx5dv_md.c:1783
#14 0x000073249e8622e6 in uct_ib_mlx5_devx_md_open (ibv_device=0x2d048ad0, md_config=0x2d053270, p_md=0x7ffd0a04a368) at dv/ib_mlx5dv_md.c:2206
#15 0x00007325516ae60e in uct_ib_component_md_open (ib_device=0x2d048ad0, md_config=0x2d053270, md_name=0x7ffd0a04a4e0 "mlx5_0", md_p=0x7ffd0a04a3c8) at base/ib_md.c:1031
#16 0x00007325516aeab3 in uct_ib_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", uct_md_config=0x2d053270, md_p=0x7ffd0a04a430) at base/ib_md.c:1126
#17 0x0000732579aacd7e in uct_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", config=0x2d053270, md_p=0x2d049ed8) at base/uct_md.c:61
#18 0x00007324af03b7f4 in ucp_fill_tl_md (context=0x2d040fc0, cmpt_index=6 '\006', md_rsc=0x7ffd0a04a4e0, tl_md=0x2d049ed8) at core/ucp_context.c:1379
#19 0x00007324af03c338 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=6 '\006', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1574
#20 0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#21 0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#22 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#23 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#24 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#25 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#26 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#27 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#28 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#29 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#30 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#31 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#32 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#33 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#34 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#35 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#36 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#37 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#38 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#39 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#40 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#41 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#42 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#43 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#44 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#45 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#46 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#47 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#48 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#49 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
---
[HIT] ucm_orig_brk
#0  ucm_orig_brk (addr=0x2d0b7000) at util/replace.c:133
#1  0x00007325d74990d9 in ucm_orig_sbrk (increment=339968) at util/replace.c:154
#2  0x00007325d749058f in ucm_event_call_orig (event_type=UCM_EVENT_SBRK, event=0x7ffd0a049d40, arg=0x0) at event/event.c:106
#3  0x00007325d7490682 in ucm_event_dispatch (event_type=UCM_EVENT_SBRK, event=0x7ffd0a049d40) at event/event.c:145
#4  0x00007325d749176c in ucm_sbrk (increment=339968) at event/event.c:400
#5  0x00007325d7498064 in ucm_override_sbrk (arg0=339968) at util/replace.c:58
#6  0x00007325daaaaa26 in __glibc_morecore (increment=increment@entry=339968) at ./malloc/morecore.c:29
#7  0x00007325daaacbf7 in sysmalloc (av=0x7325dac03ac0 <main_arena>, nb=267984) at ./malloc/malloc.c:2709
#8  _int_malloc (av=av@entry=0x7325dac03ac0 <main_arena>, bytes=bytes@entry=267968) at ./malloc/malloc.c:4481
#9  0x00007325daaae87e in __libc_calloc (n=<optimized out>, elem_size=<optimized out>) at ./malloc/malloc.c:3754
#10 0x000073255bbf777d in _verbs_init_and_alloc_context () from /lib/x86_64-linux-gnu/libibverbs.so.1
#11 0x00007324af3671b2 in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#12 0x00007324af36846f in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#13 0x000073255bbf7a33 in verbs_open_device () from /lib/x86_64-linux-gnu/libibverbs.so.1
#14 0x000073249e860c6a in uct_ib_mlx5_devx_open_device (ibv_device=0x2d048ad0) at dv/ib_mlx5dv_md.c:1783
#15 0x000073249e8622e6 in uct_ib_mlx5_devx_md_open (ibv_device=0x2d048ad0, md_config=0x2d053270, p_md=0x7ffd0a04a368) at dv/ib_mlx5dv_md.c:2206
#16 0x00007325516ae60e in uct_ib_component_md_open (ib_device=0x2d048ad0, md_config=0x2d053270, md_name=0x7ffd0a04a4e0 "mlx5_0", md_p=0x7ffd0a04a3c8) at base/ib_md.c:1031
#17 0x00007325516aeab3 in uct_ib_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", uct_md_config=0x2d053270, md_p=0x7ffd0a04a430) at base/ib_md.c:1126
#18 0x0000732579aacd7e in uct_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", config=0x2d053270, md_p=0x2d049ed8) at base/uct_md.c:61
#19 0x00007324af03b7f4 in ucp_fill_tl_md (context=0x2d040fc0, cmpt_index=6 '\006', md_rsc=0x7ffd0a04a4e0, tl_md=0x2d049ed8) at core/ucp_context.c:1379
#20 0x00007324af03c338 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=6 '\006', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1574
#21 0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#22 0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#23 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#24 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#25 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#26 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#27 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#28 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#29 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#30 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#31 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#32 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#33 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#34 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#35 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#36 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#37 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#38 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#39 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#40 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#41 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#42 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#43 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#44 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#45 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#46 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#47 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#48 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#49 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
---
[HIT] ucm_event_leave
#0  ucm_event_leave () at event/event.c:173
#1  0x00007325d7491835 in ucm_sbrk (increment=339968) at event/event.c:408
#2  0x00007325d7498064 in ucm_override_sbrk (arg0=339968) at util/replace.c:58
#3  0x00007325daaaaa26 in __glibc_morecore (increment=increment@entry=339968) at ./malloc/morecore.c:29
#4  0x00007325daaacbf7 in sysmalloc (av=0x7325dac03ac0 <main_arena>, nb=267984) at ./malloc/malloc.c:2709
#5  _int_malloc (av=av@entry=0x7325dac03ac0 <main_arena>, bytes=bytes@entry=267968) at ./malloc/malloc.c:4481
#6  0x00007325daaae87e in __libc_calloc (n=<optimized out>, elem_size=<optimized out>) at ./malloc/malloc.c:3754
#7  0x000073255bbf777d in _verbs_init_and_alloc_context () from /lib/x86_64-linux-gnu/libibverbs.so.1
#8  0x00007324af3671b2 in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#9  0x00007324af36846f in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#10 0x000073255bbf7a33 in verbs_open_device () from /lib/x86_64-linux-gnu/libibverbs.so.1
#11 0x000073249e860c6a in uct_ib_mlx5_devx_open_device (ibv_device=0x2d048ad0) at dv/ib_mlx5dv_md.c:1783
#12 0x000073249e8622e6 in uct_ib_mlx5_devx_md_open (ibv_device=0x2d048ad0, md_config=0x2d053270, p_md=0x7ffd0a04a368) at dv/ib_mlx5dv_md.c:2206
#13 0x00007325516ae60e in uct_ib_component_md_open (ib_device=0x2d048ad0, md_config=0x2d053270, md_name=0x7ffd0a04a4e0 "mlx5_0", md_p=0x7ffd0a04a3c8) at base/ib_md.c:1031
#14 0x00007325516aeab3 in uct_ib_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", uct_md_config=0x2d053270, md_p=0x7ffd0a04a430) at base/ib_md.c:1126
#15 0x0000732579aacd7e in uct_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", config=0x2d053270, md_p=0x2d049ed8) at base/uct_md.c:61
#16 0x00007324af03b7f4 in ucp_fill_tl_md (context=0x2d040fc0, cmpt_index=6 '\006', md_rsc=0x7ffd0a04a4e0, tl_md=0x2d049ed8) at core/ucp_context.c:1379
#17 0x00007324af03c338 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=6 '\006', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1574
#18 0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#19 0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#20 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#21 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#22 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#23 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#24 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#25 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#26 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#27 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#28 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#29 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#30 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#31 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#32 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#33 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#34 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#35 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#36 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#37 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#38 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#39 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#40 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#41 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#42 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#43 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#44 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#45 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#46 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#47 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#48 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#49 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
---
[HIT] ucm_mmap
#0  ucm_mmap (addr=0x0, length=4096, prot=1, flags=1, fd=44, offset=5242880) at event/event.c:178
#1  0x00007325d7497d4e in ucm_override_mmap (arg0=0x0, arg1=4096, arg2=1, arg3=1, arg4=44, arg5=5242880) at util/replace.c:50
#2  0x00007324af3680b6 in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#3  0x00007324af3685f1 in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#4  0x000073255bbf7a33 in verbs_open_device () from /lib/x86_64-linux-gnu/libibverbs.so.1
#5  0x000073249e860c6a in uct_ib_mlx5_devx_open_device (ibv_device=0x2d048ad0) at dv/ib_mlx5dv_md.c:1783
#6  0x000073249e8622e6 in uct_ib_mlx5_devx_md_open (ibv_device=0x2d048ad0, md_config=0x2d053270, p_md=0x7ffd0a04a368) at dv/ib_mlx5dv_md.c:2206
#7  0x00007325516ae60e in uct_ib_component_md_open (ib_device=0x2d048ad0, md_config=0x2d053270, md_name=0x7ffd0a04a4e0 "mlx5_0", md_p=0x7ffd0a04a3c8) at base/ib_md.c:1031
#8  0x00007325516aeab3 in uct_ib_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", uct_md_config=0x2d053270, md_p=0x7ffd0a04a430) at base/ib_md.c:1126
#9  0x0000732579aacd7e in uct_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", config=0x2d053270, md_p=0x2d049ed8) at base/uct_md.c:61
#10 0x00007324af03b7f4 in ucp_fill_tl_md (context=0x2d040fc0, cmpt_index=6 '\006', md_rsc=0x7ffd0a04a4e0, tl_md=0x2d049ed8) at core/ucp_context.c:1379
#11 0x00007324af03c338 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=6 '\006', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1574
#12 0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#13 0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#14 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#17 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#18 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#19 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#20 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#21 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#22 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#23 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#24 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#25 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#26 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#27 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#28 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#29 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#30 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#31 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#32 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#33 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#34 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#35 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#36 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#37 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#38 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#39 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#40 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#41 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#42 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#43 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#44 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#45 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#46 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#47 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#48 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#49 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
---
[HIT] ucm_orig_mmap
#0  ucm_orig_mmap (arg0=0x0, arg1=4096, arg2=1, arg3=1, arg4=44, arg5=5242880) at util/replace.c:62
#1  0x00007325d749044d in ucm_event_call_orig (event_type=UCM_EVENT_MMAP, event=0x7ffd0a049c50, arg=0x0) at event/event.c:64
#2  0x00007325d7490682 in ucm_event_dispatch (event_type=UCM_EVENT_MMAP, event=0x7ffd0a049c50) at event/event.c:145
#3  0x00007325d749098f in ucm_mmap (addr=0x0, length=4096, prot=1, flags=1, fd=44, offset=5242880) at event/event.c:197
#4  0x00007325d7497d4e in ucm_override_mmap (arg0=0x0, arg1=4096, arg2=1, arg3=1, arg4=44, arg5=5242880) at util/replace.c:50
#5  0x00007324af3680b6 in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#6  0x00007324af3685f1 in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#7  0x000073255bbf7a33 in verbs_open_device () from /lib/x86_64-linux-gnu/libibverbs.so.1
#8  0x000073249e860c6a in uct_ib_mlx5_devx_open_device (ibv_device=0x2d048ad0) at dv/ib_mlx5dv_md.c:1783
#9  0x000073249e8622e6 in uct_ib_mlx5_devx_md_open (ibv_device=0x2d048ad0, md_config=0x2d053270, p_md=0x7ffd0a04a368) at dv/ib_mlx5dv_md.c:2206
#10 0x00007325516ae60e in uct_ib_component_md_open (ib_device=0x2d048ad0, md_config=0x2d053270, md_name=0x7ffd0a04a4e0 "mlx5_0", md_p=0x7ffd0a04a3c8) at base/ib_md.c:1031
#11 0x00007325516aeab3 in uct_ib_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", uct_md_config=0x2d053270, md_p=0x7ffd0a04a430) at base/ib_md.c:1126
#12 0x0000732579aacd7e in uct_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", config=0x2d053270, md_p=0x2d049ed8) at base/uct_md.c:61
#13 0x00007324af03b7f4 in ucp_fill_tl_md (context=0x2d040fc0, cmpt_index=6 '\006', md_rsc=0x7ffd0a04a4e0, tl_md=0x2d049ed8) at core/ucp_context.c:1379
#14 0x00007324af03c338 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=6 '\006', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1574
#15 0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#16 0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#17 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#18 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#19 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#20 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#21 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#22 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#23 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#24 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#25 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#26 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#27 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#28 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#29 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#30 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#31 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#32 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#33 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#34 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#35 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#36 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#37 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#38 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#39 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#40 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#41 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#42 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#43 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#44 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#45 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#46 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#47 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#48 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#49 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
---
[HIT] ucm_munmap
#0  ucm_munmap (addr=0x7325d9c78000, length=4096) at event/event.c:211
#1  0x00007325d7497dea in ucm_override_munmap (arg0=0x7325d9c78000, arg1=4096) at util/replace.c:51
#2  0x00007324af38032b in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#3  0x000073249e858bfd in ibv_free_dm (dm=0x2d0536a0) at /usr/include/infiniband/verbs.h:2777
#4  0x000073249e861eca in uct_ib_mlx5_devx_device_mem_free (uct_md=0x2d0523f0, tl_memh=0x2d052c20) at dv/ib_mlx5dv_md.c:2109
#5  0x000073249e8620d8 in uct_ib_mlx5dv_check_dm_ksm_reg (md=0x2d0523f0) at dv/ib_mlx5dv_md.c:2153
#6  0x000073249e863280 in uct_ib_mlx5_devx_md_open (ibv_device=0x2d048ad0, md_config=0x2d053270, p_md=0x7ffd0a04a368) at dv/ib_mlx5dv_md.c:2470
#7  0x00007325516ae60e in uct_ib_component_md_open (ib_device=0x2d048ad0, md_config=0x2d053270, md_name=0x7ffd0a04a4e0 "mlx5_0", md_p=0x7ffd0a04a3c8) at base/ib_md.c:1031
#8  0x00007325516aeab3 in uct_ib_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", uct_md_config=0x2d053270, md_p=0x7ffd0a04a430) at base/ib_md.c:1126
#9  0x0000732579aacd7e in uct_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", config=0x2d053270, md_p=0x2d049ed8) at base/uct_md.c:61
#10 0x00007324af03b7f4 in ucp_fill_tl_md (context=0x2d040fc0, cmpt_index=6 '\006', md_rsc=0x7ffd0a04a4e0, tl_md=0x2d049ed8) at core/ucp_context.c:1379
#11 0x00007324af03c338 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=6 '\006', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1574
#12 0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#13 0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#14 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#17 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#18 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#19 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#20 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#21 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#22 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#23 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#24 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#25 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#26 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#27 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#28 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#29 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#30 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#31 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#32 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#33 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#34 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#35 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#36 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#37 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#38 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#39 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#40 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#41 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#42 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#43 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#44 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#45 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#46 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#47 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#48 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#49 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
---
[HIT] ucm_orig_munmap
#0  ucm_orig_munmap (arg0=0x7325d9c78000, arg1=4096) at util/replace.c:63
#1  0x00007325d7490483 in ucm_event_call_orig (event_type=UCM_EVENT_MUNMAP, event=0x7ffd0a04a050, arg=0x0) at event/event.c:74
#2  0x00007325d7490682 in ucm_event_dispatch (event_type=UCM_EVENT_MUNMAP, event=0x7ffd0a04a050) at event/event.c:145
#3  0x00007325d7490b6a in ucm_munmap (addr=0x7325d9c78000, length=4096) at event/event.c:223
#4  0x00007325d7497dea in ucm_override_munmap (arg0=0x7325d9c78000, arg1=4096) at util/replace.c:51
#5  0x00007324af38032b in ?? () from /lib/x86_64-linux-gnu/libmlx5.so.1
#6  0x000073249e858bfd in ibv_free_dm (dm=0x2d0536a0) at /usr/include/infiniband/verbs.h:2777
#7  0x000073249e861eca in uct_ib_mlx5_devx_device_mem_free (uct_md=0x2d0523f0, tl_memh=0x2d052c20) at dv/ib_mlx5dv_md.c:2109
#8  0x000073249e8620d8 in uct_ib_mlx5dv_check_dm_ksm_reg (md=0x2d0523f0) at dv/ib_mlx5dv_md.c:2153
#9  0x000073249e863280 in uct_ib_mlx5_devx_md_open (ibv_device=0x2d048ad0, md_config=0x2d053270, p_md=0x7ffd0a04a368) at dv/ib_mlx5dv_md.c:2470
#10 0x00007325516ae60e in uct_ib_component_md_open (ib_device=0x2d048ad0, md_config=0x2d053270, md_name=0x7ffd0a04a4e0 "mlx5_0", md_p=0x7ffd0a04a3c8) at base/ib_md.c:1031
#11 0x00007325516aeab3 in uct_ib_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", uct_md_config=0x2d053270, md_p=0x7ffd0a04a430) at base/ib_md.c:1126
#12 0x0000732579aacd7e in uct_md_open (component=0x7325516fd700 <uct_ib_component>, md_name=0x7ffd0a04a4e0 "mlx5_0", config=0x2d053270, md_p=0x2d049ed8) at base/uct_md.c:61
#13 0x00007324af03b7f4 in ucp_fill_tl_md (context=0x2d040fc0, cmpt_index=6 '\006', md_rsc=0x7ffd0a04a4e0, tl_md=0x2d049ed8) at core/ucp_context.c:1379
#14 0x00007324af03c338 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=6 '\006', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1574
#15 0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#16 0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#17 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#18 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#19 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#20 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#21 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#22 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#23 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#24 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#25 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#26 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#27 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#28 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#29 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#30 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#31 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#32 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#33 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#34 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#35 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#36 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#37 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#38 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#39 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#40 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#41 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#42 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#43 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#44 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#45 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#46 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#47 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#48 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#49 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
---
[HIT] ucm_madvise
#0  ucm_madvise (addr=0x2d0df000, length=4096, advice=11) at event/event.c:450
#1  0x00007325d7498195 in ucm_override_madvise (arg0=0x2d0df000, arg1=4096, arg2=11) at util/replace.c:60
#2  0x000073249e85ad85 in uct_ib_mlx5_md_buf_free (md=0x2d09adf0, buf=0x2d0df000, mem=0x2d09b238) at /data/ZYH/ucx-1.18.1/src/uct/ib/mlx5/ib_mlx5.h:1081
#3  0x000073249e863638 in uct_ib_mlx5_devx_md_close (tl_md=0x2d09adf0) at dv/ib_mlx5dv_md.c:2535
#4  0x0000732579aace44 in uct_md_close (md=0x2d09adf0) at base/uct_md.c:76
#5  0x00007324af03c8c4 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=7 '\a', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1649
#6  0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#7  0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#8  0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#10 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#12 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#14 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#15 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#16 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#17 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#18 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#19 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#20 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#21 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#22 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#23 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#24 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#25 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#26 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#27 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#28 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#29 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#30 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#31 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#32 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#33 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#34 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#35 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#36 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#37 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#38 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#39 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#40 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#41 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#42 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#43 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#44 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#45 0x00000000005bcc43 in _start ()
---
[HIT] ucm_orig_madvise
#0  ucm_orig_madvise (arg0=0x2d0df000, arg1=4096, arg2=11) at util/replace.c:68
#1  0x00007325d74905cc in ucm_event_call_orig (event_type=UCM_EVENT_MADVISE, event=0x7ffd0a04a3c0, arg=0x0) at event/event.c:111
#2  0x00007325d7490682 in ucm_event_dispatch (event_type=UCM_EVENT_MADVISE, event=0x7ffd0a04a3c0) at event/event.c:145
#3  0x00007325d7491be7 in ucm_madvise (addr=0x2d0df000, length=4096, advice=11) at event/event.c:476
#4  0x00007325d7498195 in ucm_override_madvise (arg0=0x2d0df000, arg1=4096, arg2=11) at util/replace.c:60
#5  0x000073249e85ad85 in uct_ib_mlx5_md_buf_free (md=0x2d09adf0, buf=0x2d0df000, mem=0x2d09b238) at /data/ZYH/ucx-1.18.1/src/uct/ib/mlx5/ib_mlx5.h:1081
#6  0x000073249e863638 in uct_ib_mlx5_devx_md_close (tl_md=0x2d09adf0) at dv/ib_mlx5dv_md.c:2535
#7  0x0000732579aace44 in uct_md_close (md=0x2d09adf0) at base/uct_md.c:76
#8  0x00007324af03c8c4 in ucp_add_component_resources (context=0x2d040fc0, cmpt_index=7 '\a', avail_devices=0x7ffd0a04a780, avail_tls=0x7ffd0a04a700, dev_cfg_masks=0x7ffd0a04a760, tl_cfg_mask=0x7ffd0a04a628, config=0x2cf15a70, aux_tls=0x7ffd0a04a730) at core/ucp_context.c:1649
#9  0x00007324af03d467 in ucp_fill_resources (context=0x2d040fc0, config=0x2cf15a70) at core/ucp_context.c:1822
#10 0x00007324af03ef80 in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2299
#11 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#12 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#14 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#17 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#18 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#19 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#20 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#21 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#22 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#23 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#24 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#25 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#26 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#27 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#28 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#29 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#30 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#31 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#32 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#33 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#34 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#35 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#36 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#37 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#38 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#39 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#40 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#41 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#42 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#43 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#44 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#45 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#46 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#47 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#48 0x00000000005bcc43 in _start ()
---
[HIT] ucm_set_event_handler
#0  ucm_set_event_handler (events=2228224, priority=500, cb=0x7325535b2100 <ucs_rcache_unmapped_callback>, arg=0x2d04eb90) at event/event.c:573
#1  0x00007325535b4c06 in ucs_rcache_t_init (self=0x2d04eb90, _myclass=0x7325535fa420 <ucs_rcache_t_class>, _init_count=0x7ffd0a04a73c, params=0x7ffd0a04a7e0, name=0x7324af284075 "ucp_rcache", stats_parent=0x7325535fa4d8 <ucs_stats_context+88>) at memory/rcache.c:1358
#2  0x00007325535b4fb1 in ucs_rcache_create (arg0=0x7ffd0a04a7e0, arg1=0x7324af284075 "ucp_rcache", arg2=0x7325535fa4d8 <ucs_stats_context+88>, obj_p=0x2d0411a0) at memory/rcache.c:1418
#3  0x00007324af088309 in ucp_mem_rcache_create (context=0x2d040fc0, name=0x7324af284075 "ucp_rcache", rcache_p=0x2d0411a0, events=1, rcache_params=0x7ffd0a04a7e0) at core/ucp_mm.c:1671
#4  0x00007324af08836b in ucp_mem_rcache_init (context=0x2d040fc0, rcache_config=0x2cf15b40) at core/ucp_mm.c:1683
#5  0x00007324af03efdf in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2308
#6  0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#7  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#10 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#12 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#13 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#14 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#15 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#16 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#17 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#18 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#19 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#20 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#21 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#22 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#23 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#24 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#25 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#26 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#27 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#28 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#29 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#30 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#31 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#32 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#33 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#34 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#35 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#36 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#37 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#38 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#39 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#40 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#41 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#42 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#43 0x00000000005bcc43 in _start ()
---
[HIT] ucm_mremap
#0  ucm_mremap (old_address=0x7325d9c77000, old_size=4096, new_size=8192, flags=1) at event/event.c:253
#1  0x00007325d7497ea1 in ucm_override_mremap (arg0=0x7325d9c77000, arg1=4096, arg2=8192, arg3=1, arg4=0x7325d74b1f00 <ucm_event_lock>) at util/replace.c:53
#2  0x00007325d7495d61 in ucm_fire_mmap_events_internal (events=131327, data=0x7ffd0a04a514, exclusive=0) at mmap/install.c:168
#3  0x00007325d7496d76 in ucm_mmap_test_events_nolock (events=131327, exclusive=0, event_type=0x7325d74ab31b "existing") at mmap/install.c:295
#4  0x00007325d7497529 in ucm_mmap_install (events=2228224, exclusive=0) at mmap/install.c:426
#5  0x00007325d7491dd7 in ucm_event_install (events=2228224) at event/event.c:532
#6  0x00007325d7492027 in ucm_set_event_handler (events=2228224, priority=500, cb=0x7325535b2100 <ucs_rcache_unmapped_callback>, arg=0x2d04eb90) at event/event.c:596
#7  0x00007325535b4c06 in ucs_rcache_t_init (self=0x2d04eb90, _myclass=0x7325535fa420 <ucs_rcache_t_class>, _init_count=0x7ffd0a04a73c, params=0x7ffd0a04a7e0, name=0x7324af284075 "ucp_rcache", stats_parent=0x7325535fa4d8 <ucs_stats_context+88>) at memory/rcache.c:1358
#8  0x00007325535b4fb1 in ucs_rcache_create (arg0=0x7ffd0a04a7e0, arg1=0x7324af284075 "ucp_rcache", arg2=0x7325535fa4d8 <ucs_stats_context+88>, obj_p=0x2d0411a0) at memory/rcache.c:1418
#9  0x00007324af088309 in ucp_mem_rcache_create (context=0x2d040fc0, name=0x7324af284075 "ucp_rcache", rcache_p=0x2d0411a0, events=1, rcache_params=0x7ffd0a04a7e0) at core/ucp_mm.c:1671
#10 0x00007324af08836b in ucp_mem_rcache_init (context=0x2d040fc0, rcache_config=0x2cf15b40) at core/ucp_mm.c:1683
#11 0x00007324af03efdf in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2308
#12 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#14 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#17 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#18 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#19 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#20 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#21 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#22 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#23 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#24 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#25 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#26 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#27 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#28 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#29 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#30 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#31 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#32 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#33 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#34 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#35 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#36 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#37 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#38 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#39 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#40 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#41 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#42 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#43 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#44 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#45 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#46 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#47 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#48 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#49 0x00000000005bcc43 in _start ()
---
[HIT] ucm_orig_mremap
#0  ucm_orig_mremap (arg0=0x7325d9c77000, arg1=4096, arg2=8192, arg3=1, arg4=0x0) at util/replace.c:65
#1  0x00007325d74904d1 in ucm_event_call_orig (event_type=UCM_EVENT_MREMAP, event=0x7ffd0a04a2a0, arg=0x0) at event/event.c:80
#2  0x00007325d7490682 in ucm_event_dispatch (event_type=UCM_EVENT_MREMAP, event=0x7ffd0a04a2a0) at event/event.c:145
#3  0x00007325d749102b in ucm_mremap (old_address=0x7325d9c77000, old_size=4096, new_size=8192, flags=1) at event/event.c:277
#4  0x00007325d7497ea1 in ucm_override_mremap (arg0=0x7325d9c77000, arg1=4096, arg2=8192, arg3=1, arg4=0x7325d74b1f00 <ucm_event_lock>) at util/replace.c:53
#5  0x00007325d7495d61 in ucm_fire_mmap_events_internal (events=131327, data=0x7ffd0a04a514, exclusive=0) at mmap/install.c:168
#6  0x00007325d7496d76 in ucm_mmap_test_events_nolock (events=131327, exclusive=0, event_type=0x7325d74ab31b "existing") at mmap/install.c:295
#7  0x00007325d7497529 in ucm_mmap_install (events=2228224, exclusive=0) at mmap/install.c:426
#8  0x00007325d7491dd7 in ucm_event_install (events=2228224) at event/event.c:532
#9  0x00007325d7492027 in ucm_set_event_handler (events=2228224, priority=500, cb=0x7325535b2100 <ucs_rcache_unmapped_callback>, arg=0x2d04eb90) at event/event.c:596
#10 0x00007325535b4c06 in ucs_rcache_t_init (self=0x2d04eb90, _myclass=0x7325535fa420 <ucs_rcache_t_class>, _init_count=0x7ffd0a04a73c, params=0x7ffd0a04a7e0, name=0x7324af284075 "ucp_rcache", stats_parent=0x7325535fa4d8 <ucs_stats_context+88>) at memory/rcache.c:1358
#11 0x00007325535b4fb1 in ucs_rcache_create (arg0=0x7ffd0a04a7e0, arg1=0x7324af284075 "ucp_rcache", arg2=0x7325535fa4d8 <ucs_stats_context+88>, obj_p=0x2d0411a0) at memory/rcache.c:1418
#12 0x00007324af088309 in ucp_mem_rcache_create (context=0x2d040fc0, name=0x7324af284075 "ucp_rcache", rcache_p=0x2d0411a0, events=1, rcache_params=0x7ffd0a04a7e0) at core/ucp_mm.c:1671
#13 0x00007324af08836b in ucp_mem_rcache_init (context=0x2d040fc0, rcache_config=0x2cf15b40) at core/ucp_mm.c:1683
#14 0x00007324af03efdf in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2308
#15 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#17 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#18 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#19 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#20 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#21 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#22 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#23 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#24 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#25 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#26 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#27 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#28 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#29 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#30 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#31 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#32 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#33 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#34 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#35 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#36 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#37 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#38 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#39 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#40 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#41 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#42 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#43 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#44 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#45 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#46 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#47 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#48 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#49 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
---
[HIT] ucm_shmat
#0  ucm_shmat (shmid=98361, shmaddr=0x0, shmflg=0) at event/event.c:310
#1  0x00007325d7497f42 in ucm_override_shmat (arg0=98361, arg1=0x0, arg2=0) at util/replace.c:56
#2  0x00007325d749611f in ucm_fire_mmap_events_internal (events=131327, data=0x7ffd0a04a514, exclusive=0) at mmap/install.c:190
#3  0x00007325d7496d76 in ucm_mmap_test_events_nolock (events=131327, exclusive=0, event_type=0x7325d74ab31b "existing") at mmap/install.c:295
#4  0x00007325d7497529 in ucm_mmap_install (events=2228224, exclusive=0) at mmap/install.c:426
#5  0x00007325d7491dd7 in ucm_event_install (events=2228224) at event/event.c:532
#6  0x00007325d7492027 in ucm_set_event_handler (events=2228224, priority=500, cb=0x7325535b2100 <ucs_rcache_unmapped_callback>, arg=0x2d04eb90) at event/event.c:596
#7  0x00007325535b4c06 in ucs_rcache_t_init (self=0x2d04eb90, _myclass=0x7325535fa420 <ucs_rcache_t_class>, _init_count=0x7ffd0a04a73c, params=0x7ffd0a04a7e0, name=0x7324af284075 "ucp_rcache", stats_parent=0x7325535fa4d8 <ucs_stats_context+88>) at memory/rcache.c:1358
#8  0x00007325535b4fb1 in ucs_rcache_create (arg0=0x7ffd0a04a7e0, arg1=0x7324af284075 "ucp_rcache", arg2=0x7325535fa4d8 <ucs_stats_context+88>, obj_p=0x2d0411a0) at memory/rcache.c:1418
#9  0x00007324af088309 in ucp_mem_rcache_create (context=0x2d040fc0, name=0x7324af284075 "ucp_rcache", rcache_p=0x2d0411a0, events=1, rcache_params=0x7ffd0a04a7e0) at core/ucp_mm.c:1671
#10 0x00007324af08836b in ucp_mem_rcache_init (context=0x2d040fc0, rcache_config=0x2cf15b40) at core/ucp_mm.c:1683
#11 0x00007324af03efdf in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2308
#12 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#14 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#17 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#18 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#19 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#20 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#21 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#22 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#23 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#24 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#25 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#26 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#27 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#28 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#29 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#30 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#31 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#32 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#33 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#34 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#35 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#36 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#37 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#38 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#39 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#40 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#41 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#42 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#43 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#44 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#45 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#46 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#47 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#48 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#49 0x00000000005bcc43 in _start ()
---
[HIT] ucm_orig_shmat
#0  ucm_orig_shmat (arg0=98361, arg1=0x0, arg2=0) at util/replace.c:73
#1  0x00007325d749050e in ucm_event_call_orig (event_type=UCM_EVENT_SHMAT, event=0x7ffd0a04a380, arg=0x0) at event/event.c:89
#2  0x00007325d7490682 in ucm_event_dispatch (event_type=UCM_EVENT_SHMAT, event=0x7ffd0a04a380) at event/event.c:145
#3  0x00007325d749139c in ucm_shmat (shmid=98361, shmaddr=0x0, shmflg=0) at event/event.c:341
#4  0x00007325d7497f42 in ucm_override_shmat (arg0=98361, arg1=0x0, arg2=0) at util/replace.c:56
#5  0x00007325d749611f in ucm_fire_mmap_events_internal (events=131327, data=0x7ffd0a04a514, exclusive=0) at mmap/install.c:190
#6  0x00007325d7496d76 in ucm_mmap_test_events_nolock (events=131327, exclusive=0, event_type=0x7325d74ab31b "existing") at mmap/install.c:295
#7  0x00007325d7497529 in ucm_mmap_install (events=2228224, exclusive=0) at mmap/install.c:426
#8  0x00007325d7491dd7 in ucm_event_install (events=2228224) at event/event.c:532
#9  0x00007325d7492027 in ucm_set_event_handler (events=2228224, priority=500, cb=0x7325535b2100 <ucs_rcache_unmapped_callback>, arg=0x2d04eb90) at event/event.c:596
#10 0x00007325535b4c06 in ucs_rcache_t_init (self=0x2d04eb90, _myclass=0x7325535fa420 <ucs_rcache_t_class>, _init_count=0x7ffd0a04a73c, params=0x7ffd0a04a7e0, name=0x7324af284075 "ucp_rcache", stats_parent=0x7325535fa4d8 <ucs_stats_context+88>) at memory/rcache.c:1358
#11 0x00007325535b4fb1 in ucs_rcache_create (arg0=0x7ffd0a04a7e0, arg1=0x7324af284075 "ucp_rcache", arg2=0x7325535fa4d8 <ucs_stats_context+88>, obj_p=0x2d0411a0) at memory/rcache.c:1418
#12 0x00007324af088309 in ucp_mem_rcache_create (context=0x2d040fc0, name=0x7324af284075 "ucp_rcache", rcache_p=0x2d0411a0, events=1, rcache_params=0x7ffd0a04a7e0) at core/ucp_mm.c:1671
#13 0x00007324af08836b in ucp_mem_rcache_init (context=0x2d040fc0, rcache_config=0x2cf15b40) at core/ucp_mm.c:1683
#14 0x00007324af03efdf in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2308
#15 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#17 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#18 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#19 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#20 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#21 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#22 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#23 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#24 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#25 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#26 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#27 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#28 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#29 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#30 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#31 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#32 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#33 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#34 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#35 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#36 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#37 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#38 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#39 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#40 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#41 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#42 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#43 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#44 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#45 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#46 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#47 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#48 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#49 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
---
[HIT] ucm_shmdt
#0  ucm_shmdt (shmaddr=0x7325d9c77000) at event/event.c:360
#1  0x00007325d7497fd3 in ucm_override_shmdt (arg0=0x7325d9c77000) at util/replace.c:57
#2  0x00007325d74962af in ucm_fire_mmap_events_internal (events=131327, data=0x7ffd0a04a514, exclusive=0) at mmap/install.c:197
#3  0x00007325d7496d76 in ucm_mmap_test_events_nolock (events=131327, exclusive=0, event_type=0x7325d74ab31b "existing") at mmap/install.c:295
#4  0x00007325d7497529 in ucm_mmap_install (events=2228224, exclusive=0) at mmap/install.c:426
#5  0x00007325d7491dd7 in ucm_event_install (events=2228224) at event/event.c:532
#6  0x00007325d7492027 in ucm_set_event_handler (events=2228224, priority=500, cb=0x7325535b2100 <ucs_rcache_unmapped_callback>, arg=0x2d04eb90) at event/event.c:596
#7  0x00007325535b4c06 in ucs_rcache_t_init (self=0x2d04eb90, _myclass=0x7325535fa420 <ucs_rcache_t_class>, _init_count=0x7ffd0a04a73c, params=0x7ffd0a04a7e0, name=0x7324af284075 "ucp_rcache", stats_parent=0x7325535fa4d8 <ucs_stats_context+88>) at memory/rcache.c:1358
#8  0x00007325535b4fb1 in ucs_rcache_create (arg0=0x7ffd0a04a7e0, arg1=0x7324af284075 "ucp_rcache", arg2=0x7325535fa4d8 <ucs_stats_context+88>, obj_p=0x2d0411a0) at memory/rcache.c:1418
#9  0x00007324af088309 in ucp_mem_rcache_create (context=0x2d040fc0, name=0x7324af284075 "ucp_rcache", rcache_p=0x2d0411a0, events=1, rcache_params=0x7ffd0a04a7e0) at core/ucp_mm.c:1671
#10 0x00007324af08836b in ucp_mem_rcache_init (context=0x2d040fc0, rcache_config=0x2cf15b40) at core/ucp_mm.c:1683
#11 0x00007324af03efdf in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2308
#12 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#14 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#17 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#18 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#19 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#20 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#21 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#22 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#23 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#24 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#25 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#26 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#27 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#28 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#29 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#30 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#31 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#32 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#33 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#34 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#35 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#36 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#37 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#38 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#39 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#40 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#41 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#42 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#43 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#44 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#45 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#46 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#47 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#48 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#49 0x00000000005bcc43 in _start ()
---
[HIT] ucm_orig_shmdt
#0  ucm_orig_shmdt (arg0=0x7325d9c77000) at util/replace.c:102
#1  0x00007325d7490539 in ucm_event_call_orig (event_type=UCM_EVENT_SHMDT, event=0x7ffd0a04a3b0, arg=0x0) at event/event.c:96
#2  0x00007325d7490682 in ucm_event_dispatch (event_type=UCM_EVENT_SHMDT, event=0x7ffd0a04a3b0) at event/event.c:145
#3  0x00007325d74915f1 in ucm_shmdt (shmaddr=0x7325d9c77000) at event/event.c:376
#4  0x00007325d7497fd3 in ucm_override_shmdt (arg0=0x7325d9c77000) at util/replace.c:57
#5  0x00007325d74962af in ucm_fire_mmap_events_internal (events=131327, data=0x7ffd0a04a514, exclusive=0) at mmap/install.c:197
#6  0x00007325d7496d76 in ucm_mmap_test_events_nolock (events=131327, exclusive=0, event_type=0x7325d74ab31b "existing") at mmap/install.c:295
#7  0x00007325d7497529 in ucm_mmap_install (events=2228224, exclusive=0) at mmap/install.c:426
#8  0x00007325d7491dd7 in ucm_event_install (events=2228224) at event/event.c:532
#9  0x00007325d7492027 in ucm_set_event_handler (events=2228224, priority=500, cb=0x7325535b2100 <ucs_rcache_unmapped_callback>, arg=0x2d04eb90) at event/event.c:596
#10 0x00007325535b4c06 in ucs_rcache_t_init (self=0x2d04eb90, _myclass=0x7325535fa420 <ucs_rcache_t_class>, _init_count=0x7ffd0a04a73c, params=0x7ffd0a04a7e0, name=0x7324af284075 "ucp_rcache", stats_parent=0x7325535fa4d8 <ucs_stats_context+88>) at memory/rcache.c:1358
#11 0x00007325535b4fb1 in ucs_rcache_create (arg0=0x7ffd0a04a7e0, arg1=0x7324af284075 "ucp_rcache", arg2=0x7325535fa4d8 <ucs_stats_context+88>, obj_p=0x2d0411a0) at memory/rcache.c:1418
#12 0x00007324af088309 in ucp_mem_rcache_create (context=0x2d040fc0, name=0x7324af284075 "ucp_rcache", rcache_p=0x2d0411a0, events=1, rcache_params=0x7ffd0a04a7e0) at core/ucp_mm.c:1671
#13 0x00007324af08836b in ucp_mem_rcache_init (context=0x2d040fc0, rcache_config=0x2cf15b40) at core/ucp_mm.c:1683
#14 0x00007324af03efdf in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2308
#15 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#17 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#18 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#19 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#20 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#21 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#22 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#23 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#24 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#25 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#26 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#27 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#28 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#29 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#30 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#31 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#32 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#33 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#34 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#35 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#36 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#37 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#38 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#39 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#40 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#41 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#42 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#43 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#44 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#45 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#46 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#47 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#48 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#49 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
---
[HIT] ucm_brk
#0  ucm_brk (addr=0x0) at event/event.c:415
#1  0x00007325d74980f5 in ucm_override_brk (arg0=0x0) at util/replace.c:59
#2  0x00007325d7495b9c in ucm_brk_checked (addr=0x0) at mmap/install.c:141
#3  0x00007325d74966e4 in ucm_fire_mmap_events_internal (events=131327, data=0x7ffd0a04a514, exclusive=0) at mmap/install.c:222
#4  0x00007325d7496d76 in ucm_mmap_test_events_nolock (events=131327, exclusive=0, event_type=0x7325d74ab31b "existing") at mmap/install.c:295
#5  0x00007325d7497529 in ucm_mmap_install (events=2228224, exclusive=0) at mmap/install.c:426
#6  0x00007325d7491dd7 in ucm_event_install (events=2228224) at event/event.c:532
#7  0x00007325d7492027 in ucm_set_event_handler (events=2228224, priority=500, cb=0x7325535b2100 <ucs_rcache_unmapped_callback>, arg=0x2d04eb90) at event/event.c:596
#8  0x00007325535b4c06 in ucs_rcache_t_init (self=0x2d04eb90, _myclass=0x7325535fa420 <ucs_rcache_t_class>, _init_count=0x7ffd0a04a73c, params=0x7ffd0a04a7e0, name=0x7324af284075 "ucp_rcache", stats_parent=0x7325535fa4d8 <ucs_stats_context+88>) at memory/rcache.c:1358
#9  0x00007325535b4fb1 in ucs_rcache_create (arg0=0x7ffd0a04a7e0, arg1=0x7324af284075 "ucp_rcache", arg2=0x7325535fa4d8 <ucs_stats_context+88>, obj_p=0x2d0411a0) at memory/rcache.c:1418
#10 0x00007324af088309 in ucp_mem_rcache_create (context=0x2d040fc0, name=0x7324af284075 "ucp_rcache", rcache_p=0x2d0411a0, events=1, rcache_params=0x7ffd0a04a7e0) at core/ucp_mm.c:1671
#11 0x00007324af08836b in ucp_mem_rcache_init (context=0x2d040fc0, rcache_config=0x2cf15b40) at core/ucp_mm.c:1683
#12 0x00007324af03efdf in ucp_init_version (api_major_version=1, api_minor_version=18, params=0x7ffd0a04a8e0, config=0x2cf15a70, context_p=0x2cd5d318) at core/ucp_context.c:2308
#13 0x0000732586cc21f0 in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#14 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#17 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#18 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#19 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#20 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#21 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#22 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#23 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#24 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#25 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#26 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#27 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#28 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#29 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#30 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#31 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#32 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#33 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#34 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#35 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#36 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#37 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#38 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#39 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#40 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#41 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#42 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#43 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#44 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#45 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#46 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#47 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#48 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#49 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
---
[HIT] ucp_config_release
#0  ucp_config_release (config=0x2cf15a70) at core/ucp_context.c:784
#1  0x0000732586cc220d in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#2  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#3  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#4  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#5  0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#6  0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#7  0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#8  0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#9  0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#10 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#11 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#12 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#13 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#14 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#15 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#16 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#17 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#18 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#19 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#20 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#21 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#22 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#23 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#24 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#25 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#26 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#27 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#28 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#29 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#30 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#31 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#32 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#33 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#34 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#35 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#36 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#37 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#38 0x00000000005bcc43 in _start ()
---
[HIT] ucp_worker_create
#0  ucp_worker_create (context=0x2d040fc0, params=0x7ffd0a04a990, worker_p=0x2cd5d320) at core/ucp_worker.c:2446
#1  0x0000732586cc225d in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#2  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#3  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#4  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#5  0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#6  0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#7  0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#8  0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#9  0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#10 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#11 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#12 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#13 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#14 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#15 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#16 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#17 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#18 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#19 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#20 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#21 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#22 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#23 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#24 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#25 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#26 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#27 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#28 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#29 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#30 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#31 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#32 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#33 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#34 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#35 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#36 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#37 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#38 0x00000000005bcc43 in _start ()
---
[HIT] uct_iface_open
#0  uct_iface_open (md=0x732579aff520 <md>, worker=0x2d099fe0, params=0x7ffd0a04a180, config=0x2d0de810, iface_p=0x2d09a130) at base/uct_md.c:232
#1  0x00007324af0a3fec in ucp_worker_iface_open (worker=0x2d09cda0, tl_id=0 '\000', wiface_p=0x2d051df0) at core/ucp_worker.c:1408
#2  0x00007324af0a1c5f in ucp_worker_add_resource_ifaces (worker=0x2d09cda0) at core/ucp_worker.c:1119
#3  0x00007324af0a88d7 in ucp_worker_create (context=0x2d040fc0, params=0x7ffd0a04a990, worker_p=0x2cd5d320) at core/ucp_worker.c:2595
#4  0x0000732586cc225d in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#5  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#6  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#7  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#10 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#11 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#12 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#13 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#14 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#15 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#16 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#17 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#18 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#19 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#20 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#21 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#22 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#23 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#24 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#25 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#26 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#27 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#28 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#29 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#30 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#31 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#32 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#33 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#34 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#35 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#36 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#37 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#38 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#39 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#40 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#41 0x00000000005bcc43 in _start ()
---
[HIT] uct_iface_query
#0  uct_iface_query (iface=0x2d09a5b0, iface_attr=0x2d09a138) at base/uct_iface.c:195
#1  0x00007324af0a412c in ucp_worker_iface_open (worker=0x2d09cda0, tl_id=0 '\000', wiface_p=0x2d051df0) at core/ucp_worker.c:1421
#2  0x00007324af0a1c5f in ucp_worker_add_resource_ifaces (worker=0x2d09cda0) at core/ucp_worker.c:1119
#3  0x00007324af0a88d7 in ucp_worker_create (context=0x2d040fc0, params=0x7ffd0a04a990, worker_p=0x2cd5d320) at core/ucp_worker.c:2595
#4  0x0000732586cc225d in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#5  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#6  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#7  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#10 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#11 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#12 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#13 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#14 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#15 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#16 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#17 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#18 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#19 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#20 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#21 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#22 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#23 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#24 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#25 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#26 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#27 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#28 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#29 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#30 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#31 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#32 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#33 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#34 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#35 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#36 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#37 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#38 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#39 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#40 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#41 0x00000000005bcc43 in _start ()
---
[HIT] uct_md_mem_reg
#0  uct_md_mem_reg (md=0x2d0523f0, address=0x73255bb95000, length=151552, flags=772, memh_p=0x7ffd0a049d80) at base/uct_md.c:566
#1  0x0000732579ab0614 in uct_iface_mem_alloc (tl_iface=0x2d215020, length=147568, flags=772, name=0x2acb5510 "ud_recv_skb", mem=0x7ffd0a049d60) at base/uct_mem.c:409
#2  0x0000732579ab0830 in uct_iface_mp_chunk_alloc_inner (chunk_p=0x7ffd0a049dd8, size_p=0x7ffd0a049dd0, mp=0x2d2155f8) at base/uct_mem.c:457
#3  uct_iface_mp_chunk_alloc (mp=0x2d2155f8, size_p=0x7ffd0a049dd0, chunk_p=0x7ffd0a049dd8) at base/uct_mem.c:446
#4  0x0000732553596826 in ucs_mpool_grow (mp=0x2d2155f8, num_elems=128) at datastruct/mpool.c:266
#5  0x00007325516cb250 in uct_ud_iface_t_init (self=0x2d215020, _myclass=0x7325516fe780 <uct_ud_iface_t_class>, _init_count=0x7ffd0a04a05c, ops=0x7325516fed20 <uct_ud_verbs_iface_ops>, tl_ops=0x7325516fede0 <uct_ud_verbs_iface_tl_ops>, md=0x2d0523f0, worker=0x2d099fe0, params=0x7ffd0a04a180, config=0x2d11be10, init_attr=0x7ffd0a049fc0) at ud/base/ud_iface.c:527
#6  0x00007325516e544b in uct_ud_verbs_iface_t_init (self=0x2d215020, _myclass=0x7325516fef80 <uct_ud_verbs_iface_t_class>, _init_count=0x7ffd0a04a05c, md=0x2d0523f0, worker=0x2d099fe0, params=0x7ffd0a04a180, tl_config=0x2d11be10) at ud/verbs/ud_verbs.c:761
#7  0x00007325516e584c in uct_ud_verbs_iface_t_new (arg0=0x2d0523f0, arg1=0x2d099fe0, arg2=0x7ffd0a04a180, arg3=0x2d11be10, obj_p=0x2d11bb90) at ud/verbs/ud_verbs.c:827
#8  0x0000732579aad64b in uct_iface_open (md=0x2d0523f0, worker=0x2d099fe0, params=0x7ffd0a04a180, config=0x2d11be10, iface_p=0x2d11bb90) at base/uct_md.c:250
#9  0x00007324af0a3fec in ucp_worker_iface_open (worker=0x2d09cda0, tl_id=6 '\006', wiface_p=0x2d051e20) at core/ucp_worker.c:1408
#10 0x00007324af0a1c5f in ucp_worker_add_resource_ifaces (worker=0x2d09cda0) at core/ucp_worker.c:1119
#11 0x00007324af0a88d7 in ucp_worker_create (context=0x2d040fc0, params=0x7ffd0a04a990, worker_p=0x2cd5d320) at core/ucp_worker.c:2595
#12 0x0000732586cc225d in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#14 0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#17 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#18 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#19 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#20 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#21 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#22 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#23 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#24 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#25 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#26 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#27 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#28 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#29 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#30 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#31 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#32 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#33 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#34 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#35 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#36 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#37 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#38 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#39 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#40 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#41 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#42 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#43 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#44 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#45 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#46 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#47 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#48 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#49 0x00000000005bcc43 in _start ()
---
[HIT] uct_ep_create
#0  uct_ep_create (params=0x7ffd0a0499f0, ep_p=0x7ffd0a049990) at base/uct_iface.c:725
#1  0x00007324af2647ea in ucp_wireup_connect_lane_to_iface (ep=0x732553541000, lane=0 '\000', path_index=0, wiface=0x2d0504d0, address=0x2d600030) at wireup/wireup.c:1054
#2  0x00007324af265c8f in ucp_wireup_connect_lane (ep=0x732553541000, ep_init_flags=65, lane=0 '\000', path_index=0, remote_address=0x7ffd0a04a620, addr_index=0) at wireup/wireup.c:1178
#3  0x00007324af2692e1 in ucp_wireup_init_lanes (ep=0x732553541000, ep_init_flags=65, local_tl_bitmap=0x7324af27b0f0 <ucp_tl_bitmap_max>, remote_address=0x7ffd0a04a620, addr_indices=0x7ffd0a04a660) at wireup/wireup.c:1751
#4  0x00007324af06ad3d in ucp_ep_create_to_worker_addr (worker=0x2d09cda0, local_tl_bitmap=0x7324af27b0f0 <ucp_tl_bitmap_max>, remote_address=0x7ffd0a04a620, ep_init_flags=65, message=0x7ffd0a04a760 "mem_type_ep:cuda", addr_indices=0x7ffd0a04a660, ep_p=0x2d09d208) at core/ucp_ep.c:838
#5  0x00007324af06a1e7 in ucp_worker_mem_type_eps_create (worker=0x2d09cda0) at core/ucp_ep.c:714
#6  0x00007324af0a8915 in ucp_worker_create (context=0x2d040fc0, params=0x7ffd0a04a990, worker_p=0x2cd5d320) at core/ucp_worker.c:2607
#7  0x0000732586cc225d in c10d::CommUCX::CommUCX(int, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x0000732586c94c0a in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#10 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#12 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#13 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#14 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#15 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#16 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#17 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#18 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#19 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#20 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#21 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#22 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#23 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#24 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#25 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#26 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#27 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#28 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#29 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#30 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#31 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#32 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#33 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#34 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#35 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#36 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#37 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#38 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#39 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#40 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#41 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#42 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#43 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#44 0x00000000005bcc43 in _start ()
---
[HIT] ucp_lib_query
#0  ucp_lib_query (attr=0x7ffd0a04a600) at core/ucp_context.c:2409
#1  0x00007324ac0f23ea in ucc_tl_ucp_get_lib_attr (lib=0x0, base_attr=0x7ffd0a04a660) at tl_ucp_lib.c:95
#2  0x0000732586c58d19 in check_tl_lib_attr (lib=0x2d6185a0, tl_iface=0x7324ac162560 <ucc_tl_ucp>, attr=0x2d618490) at cl_basic_lib.c:39
#3  0x0000732586c58fa4 in ucc_cl_basic_get_lib_attr (lib=0x2d6185a0, base_attr=0x2d618490) at cl_basic_lib.c:87
#4  0x00007325aa3c45e6 in ucc_cl_lib_init (user_params=0x7ffd0a04a950, config=0x2ac46d10, lib=0x2d618410) at core/ucc_lib.c:143
#5  0x00007325aa3c51d2 in ucc_init_version (api_major_version=1, api_minor_version=5, params=0x7ffd0a04a950, config=0x2ac46d10, lib_p=0x2cd5d338) at core/ucc_lib.c:349
#6  0x0000732586cc2a77 in c10d::CommUCC::CommUCC(std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#7  0x0000732586c94c4f in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#10 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#12 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#13 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#14 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#15 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#16 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#17 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#18 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#19 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#20 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#21 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#22 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#23 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#24 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#25 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#26 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#27 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#28 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#29 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#30 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#31 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#32 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#33 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#34 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#35 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#36 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#37 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#38 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#39 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#40 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#41 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#42 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#43 0x00000000005bcc43 in _start ()
---
[HIT] ucp_init
#0  ucp_init (params=0x7ffd0a04a230, config=0x2cf15a70, context_p=0x7ffd0a04a1f8) at /data/ZYH/ucx-1.18.1/install/include/ucp/api/ucp.h:2095
#1  0x00007324ac0f52be in ucc_tl_ucp_context_t_init (self=0x2cd707a0, _myclass=0x7324ac1627a0 <ucc_tl_ucp_context_t_class>, _init_count=0x7ffd0a04a430, params=0x7ffd0a04a510, config=0x2d618010) at tl_ucp_context.c:204
#2  0x00007324ac0f1860 in ucc_tl_ucp_context_t_new (arg0=0x7ffd0a04a510, arg1=0x2d618010, obj_p=0x7ffd0a04a498) at tl_ucp.c:293
#3  0x00007325aa3c7b2b in ucc_create_tl_contexts (ctx=0x2d6189c0, ctx_config=0x2d617f70, b_params=...) at core/ucc_context.c:401
#4  0x00007325aa3c89a0 in ucc_context_create_proc_info (lib=0x2d618410, params=0x7ffd0a04a9b0, config=0x2d617f70, context=0x2cd5d340, proc_info=0x7325aa3ffb40 <ucc_local_proc>) at core/ucc_context.c:637
#5  0x00007325aa3c9b78 in ucc_context_create (lib=0x2d618410, params=0x7ffd0a04a9b0, config=0x2d617f70, context=0x2cd5d340) at core/ucc_context.c:870
#6  0x0000732586cc2e0c in c10d::CommUCC::CommUCC(std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#7  0x0000732586c94c4f in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#10 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#12 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#13 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#14 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#15 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#16 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#17 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#18 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#19 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#20 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#21 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#22 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#23 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#24 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#25 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#26 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#27 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#28 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#29 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#30 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#31 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#32 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#33 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#34 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#35 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#36 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#37 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#38 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#39 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#40 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#41 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#42 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#43 0x00000000005bcc43 in _start ()
---
[HIT] ucp_worker_get_address
#0  ucp_worker_get_address (worker=0x2e65f5b0, address_p=0x2cd70810, address_length_p=0x2cd70808) at core/ucp_worker.c:3260
#1  0x00007324ac0f7081 in ucc_tl_ucp_get_context_attr (context=0x2cd707a0, attr=0x7ffd0a04a3d0) at tl_ucp_context.c:628
#2  0x00007325aa3ca4d8 in ucc_context_pack_addr (context=0x2d6189c0, addr_len=0x2d618a30, n_packed=0x2d618a68, h=0x0) at core/ucc_context.c:1056
#3  0x00007325aa3ca6ee in ucc_context_get_attr (context=0x2d6189c0, context_attr=0x7ffd0a04a540) at core/ucc_context.c:1092
#4  0x00007325aa3c802a in ucc_core_addr_exchange (context=0x2d6189c0, oob=0x2d6189d8, addr_storage=0x2d618ad0) at core/ucc_context.c:477
#5  0x00007325aa3c9083 in ucc_context_create_proc_info (lib=0x2d618410, params=0x7ffd0a04a9b0, config=0x2d617f70, context=0x2cd5d340, proc_info=0x7325aa3ffb40 <ucc_local_proc>) at core/ucc_context.c:723
#6  0x00007325aa3c9b78 in ucc_context_create (lib=0x2d618410, params=0x7ffd0a04a9b0, config=0x2d617f70, context=0x2cd5d340) at core/ucc_context.c:870
#7  0x0000732586cc2e0c in c10d::CommUCC::CommUCC(std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x0000732586c94c4f in c10d::Comm::Comm(c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::Device, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x0000732586c95db8 in c10d::Comm::get_comm(unsigned int&, c10::Device, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>, c10::intrusive_ptr<c10d::ProcessGroupUCCLogger, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroupUCCLogger> > const&, bool) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#10 0x0000732586c96e1e in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#12 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#13 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#14 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#15 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#16 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#17 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#18 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#19 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#20 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#21 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#22 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#23 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#24 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#25 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#26 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#27 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#28 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#29 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#30 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#31 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#32 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#33 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#34 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#35 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#36 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#37 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#38 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#39 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#40 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#41 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#42 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#43 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#44 0x00000000005bcc43 in _start ()
---
[HIT] ucp_worker_release_address
#0  ucp_worker_release_address (worker=0x2d09cda0, address=0x2cd1f0c0) at core/ucp_worker.c:3272
#1  0x0000732586c916f4 in c10d::Comm::ucx_connect_eps(std::vector<ucp_ep*, std::allocator<ucp_ep*> >&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#2  0x0000732586c96ea4 in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#3  0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#4  0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#5  0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#6  0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#7  0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#8  0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#9  0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#10 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#11 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#12 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#13 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#14 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#15 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#16 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#17 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#18 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#19 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#20 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#21 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#22 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#23 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#24 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#25 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#26 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#27 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#28 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#29 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#30 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#31 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#32 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#33 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#34 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#35 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#36 0x00000000005bcc43 in _start ()
---
[HIT] uct_ep_am_bcopy
#0  uct_ep_am_bcopy (flags=1, arg=0x7ffd0a04a740, pack_cb=0x7324af25ea71 <ucp_wireup_msg_pack>, id=1 '\001', ep=0x2ee45260) at /data/ZYH/ucx-1.18.1/src/uct/api/uct.h:3064
#1  ucp_wireup_msg_progress (self=0x2e175460) at wireup/wireup.c:148
#2  0x00007324af260283 in ucp_request_try_send (req=0x2e175380) at /data/ZYH/ucx-1.18.1/src/ucp/core/ucp_request.inl:307
#3  ucp_request_send (req=0x2e175380) at /data/ZYH/ucx-1.18.1/src/ucp/core/ucp_request.inl:330
#4  ucp_wireup_msg_send (ep=0x732553541140, type=1 '\001', tl_bitmap=0x7ffd0a04a980, lanes2remote=0x0) at wireup/wireup.c:264
#5  0x00007324af269838 in ucp_wireup_send_request (ep=0x732553541140) at wireup/wireup.c:1792
#6  0x00007324af06bbc3 in ucp_ep_create_api_to_worker_addr (worker=0x2d09cda0, params=0x7ffd0a04acd0, ep_p=0x7ffd0a04abc0) at core/ucp_ep.c:1129
#7  0x00007324af06bfe8 in ucp_ep_create (worker=0x2d09cda0, params=0x7ffd0a04acd0, ep_p=0x2ae637f0) at core/ucp_ep.c:1198
#8  0x0000732586c91a9c in c10d::Comm::ucx_connect_eps(std::vector<ucp_ep*, std::allocator<ucp_ep*> >&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x0000732586c96ea4 in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#10 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#12 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#13 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#14 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#15 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#16 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#17 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#18 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#19 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#20 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#21 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#22 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#23 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#24 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#25 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#26 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#27 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#28 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#29 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#30 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#31 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#32 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#33 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#34 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#35 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#36 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#37 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#38 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#39 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#40 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#41 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#42 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#43 0x00000000005bcc43 in _start ()
---
[HIT] uct_ep_pending_add
#0  uct_ep_pending_add (flags=0, req=0x2e175460, ep=0x2eece730) at /data/ZYH/ucx-1.18.1/src/uct/api/uct.h:3216
#1  ucp_request_pending_add (req=0x2e175380) at core/ucp_request.c:330
#2  0x00007324af2602be in ucp_request_try_send (req=0x2e175380) at /data/ZYH/ucx-1.18.1/src/ucp/core/ucp_request.inl:316
#3  ucp_request_send (req=0x2e175380) at /data/ZYH/ucx-1.18.1/src/ucp/core/ucp_request.inl:330
#4  ucp_wireup_msg_send (ep=0x7325535411e0, type=1 '\001', tl_bitmap=0x7ffd0a04a980, lanes2remote=0x0) at wireup/wireup.c:264
#5  0x00007324af269838 in ucp_wireup_send_request (ep=0x7325535411e0) at wireup/wireup.c:1792
#6  0x00007324af06bbc3 in ucp_ep_create_api_to_worker_addr (worker=0x2d09cda0, params=0x7ffd0a04acd0, ep_p=0x7ffd0a04abc0) at core/ucp_ep.c:1129
#7  0x00007324af06bfe8 in ucp_ep_create (worker=0x2d09cda0, params=0x7ffd0a04acd0, ep_p=0x2ae637f8) at core/ucp_ep.c:1198
#8  0x0000732586c91a9c in c10d::Comm::ucx_connect_eps(std::vector<ucp_ep*, std::allocator<ucp_ep*> >&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x0000732586c96ea4 in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#10 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#12 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#13 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#14 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#15 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#16 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#17 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#18 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#19 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#20 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#21 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#22 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#23 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#24 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#25 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#26 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#27 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#28 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#29 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#30 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#31 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#32 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#33 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#34 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#35 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#36 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#37 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#38 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#39 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#40 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#41 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#42 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#43 0x00000000005bcc43 in _start ()
---
[HIT] ucp_tag_send_nbx
#0  ucp_tag_send_nbx (ep=0x7324af2f1140, buffer=0x2e61b520, count=1, tag=2305324039725449216, param=0x7ffd0a04a7f0) at tag/tag_send.c:231
#1  0x00007324ac0f3db8 in ucc_tl_ucp_send_common (buffer=0x2e61b520, msglen=256, mtype=UCC_MEMORY_TYPE_HOST, dest_group_rank=0, team=0x2e82b6b0, task=0x2ed8d600, cb=0x7324ac0fa019 <ucc_tl_ucp_send_completion_cb_mt>, user_data=0x2ed8d600) at /data/ZYH/ucc/src/components/tl/ucp/tl_ucp_sendrecv.h:100
#2  0x00007324ac0f3faa in ucc_tl_ucp_send_nb_mt (buffer=0x2e61b520, msglen=256, mtype=UCC_MEMORY_TYPE_HOST, dest_group_rank=0, team=0x2e82b6b0, task=0x2ed8d600) at /data/ZYH/ucc/src/components/tl/ucp/tl_ucp_sendrecv.h:130
#3  0x00007324ac11be46 in ucc_tl_ucp_send_nb (buffer=0x2e61b520, msglen=256, mtype=UCC_MEMORY_TYPE_HOST, dest_group_rank=0, team=0x2e82b6b0, task=0x2ed8d600) at ./tl_ucp_sendrecv.h:147
#4  0x00007324ac11c4bb in ucc_tl_ucp_allreduce_knomial_progress (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:103
#5  0x00007324ac11b3cd in ucc_progress_queue_enqueue (pq=0x2e165110, task=0x2ed8d600) at /data/ZYH/ucc/src/core/ucc_progress_queue.h:35
#6  0x00007324ac11ccb4 in ucc_tl_ucp_allreduce_knomial_start (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:211
#7  0x00007324ac0fb2e2 in ucc_tl_ucp_service_allreduce (team=0x2e82b6b0, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., task_p=0x2e164fb0) at tl_ucp_service_coll.c:125
#8  0x00007325aa3d30a6 in ucc_service_allreduce (team=0x2eedf010, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., req=0x2eedf188) at core/ucc_service_coll.c:67
#9  0x00007325aa3cd148 in ucc_team_alloc_id (team=0x2eedf010) at core/ucc_team.c:609
#10 0x00007325aa3cc745 in ucc_team_create_test_single (context=0x2d6189c0, team=0x2eedf010) at core/ucc_team.c:443
#11 0x00007325aa3cc9fa in ucc_team_create_test (team=0x2eedf010) at core/ucc_team.c:493
#12 0x0000732586c8f221 in c10d::Comm::ucc_create_team(ucc_team*&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x0000732586c96f8d in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#14 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#16 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#17 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#18 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#19 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#20 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#21 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#22 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#23 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#24 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#25 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#26 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#27 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#28 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#29 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#30 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#31 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#32 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#33 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#34 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#35 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#36 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#37 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#38 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#39 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#40 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#41 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#42 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#43 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#44 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#45 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#46 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#47 0x00000000005bcc43 in _start ()
---
[HIT] uct_ep_am_short
#0  uct_ep_am_short (length=256, payload=0x2e61b520, header=2305324039725449216, id=2 '\002', ep=0x2f0e0e80) at /data/ZYH/ucx-1.18.1/src/uct/api/uct.h:3015
#1  ucp_eager_short_progress (self=0x2effa0a0) at tag/eager_single.c:29
#2  0x00007324af21b003 in ucp_request_try_send (req=0x2eff9fc0) at /data/ZYH/ucx-1.18.1/src/ucp/core/ucp_request.inl:307
#3  ucp_request_send (req=0x2eff9fc0) at /data/ZYH/ucx-1.18.1/src/ucp/core/ucp_request.inl:330
#4  ucp_proto_request_send_op_common (msg_length=256, select_param=0x7ffd0a04a6d0, param=0x7ffd0a04a7f0, req=0x2eff9fc0, rkey_cfg_index=255 '\377', proto_select=0x2e6a6c00, ep=0x7324af2f1140, worker=0x2e65f5b0) at /data/ZYH/ucx-1.18.1/src/ucp/proto/proto_common.inl:250
#5  ucp_proto_request_send_op (op_flags=0 '\000', header_length=0, param=0x7ffd0a04a7f0, contig_length=256, datatype=2048, count=1, buffer=0x2e61b520, op_id=UCP_OP_ID_TAG_SEND, req=0x2eff9fc0, rkey_cfg_index=255 '\377', proto_select=0x2e6a6c00, ep=0x7324af2f1140) at /data/ZYH/ucx-1.18.1/src/ucp/proto/proto_common.inl:300
#6  ucp_tag_send_nbx_inner (param=0x7ffd0a04a7f0, tag=2305324039725449216, count=1, buffer=0x2e61b520, ep=0x7324af2f1140) at tag/tag_send.c:295
#7  ucp_tag_send_nbx (ep=0x7324af2f1140, buffer=0x2e61b520, count=1, tag=2305324039725449216, param=0x7ffd0a04a7f0) at tag/tag_send.c:231
#8  0x00007324ac0f3db8 in ucc_tl_ucp_send_common (buffer=0x2e61b520, msglen=256, mtype=UCC_MEMORY_TYPE_HOST, dest_group_rank=0, team=0x2e82b6b0, task=0x2ed8d600, cb=0x7324ac0fa019 <ucc_tl_ucp_send_completion_cb_mt>, user_data=0x2ed8d600) at /data/ZYH/ucc/src/components/tl/ucp/tl_ucp_sendrecv.h:100
#9  0x00007324ac0f3faa in ucc_tl_ucp_send_nb_mt (buffer=0x2e61b520, msglen=256, mtype=UCC_MEMORY_TYPE_HOST, dest_group_rank=0, team=0x2e82b6b0, task=0x2ed8d600) at /data/ZYH/ucc/src/components/tl/ucp/tl_ucp_sendrecv.h:130
#10 0x00007324ac11be46 in ucc_tl_ucp_send_nb (buffer=0x2e61b520, msglen=256, mtype=UCC_MEMORY_TYPE_HOST, dest_group_rank=0, team=0x2e82b6b0, task=0x2ed8d600) at ./tl_ucp_sendrecv.h:147
#11 0x00007324ac11c4bb in ucc_tl_ucp_allreduce_knomial_progress (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:103
#12 0x00007324ac11b3cd in ucc_progress_queue_enqueue (pq=0x2e165110, task=0x2ed8d600) at /data/ZYH/ucc/src/core/ucc_progress_queue.h:35
#13 0x00007324ac11ccb4 in ucc_tl_ucp_allreduce_knomial_start (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:211
#14 0x00007324ac0fb2e2 in ucc_tl_ucp_service_allreduce (team=0x2e82b6b0, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., task_p=0x2e164fb0) at tl_ucp_service_coll.c:125
#15 0x00007325aa3d30a6 in ucc_service_allreduce (team=0x2eedf010, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., req=0x2eedf188) at core/ucc_service_coll.c:67
#16 0x00007325aa3cd148 in ucc_team_alloc_id (team=0x2eedf010) at core/ucc_team.c:609
#17 0x00007325aa3cc745 in ucc_team_create_test_single (context=0x2d6189c0, team=0x2eedf010) at core/ucc_team.c:443
#18 0x00007325aa3cc9fa in ucc_team_create_test (team=0x2eedf010) at core/ucc_team.c:493
#19 0x0000732586c8f221 in c10d::Comm::ucc_create_team(ucc_team*&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#20 0x0000732586c96f8d in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#21 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#22 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#23 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#24 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#25 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#26 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#27 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#28 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#29 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#30 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#31 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#32 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#33 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#34 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#35 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#36 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#37 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#38 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#39 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#40 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#41 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#42 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#43 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#44 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#45 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#46 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#47 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#48 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#49 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
---
[HIT] ucp_tag_recv_nbx
#0  ucp_tag_recv_nbx (worker=0x2e65f5b0, buffer=0x2eef0050, count=1, tag=2305324039725383680, tag_mask=18446744073709551615, param=0x7ffd0a04a7f0) at tag/tag_recv.c:224
#1  0x00007324ac0f42f8 in ucc_tl_ucp_recv_common (buffer=0x2eef0050, msglen=256, mtype=UCC_MEMORY_TYPE_HOST, dest_group_rank=0, team=0x2e82b6b0, task=0x2ed8d600, cb=0x7324ac0fa2c8 <ucc_tl_ucp_recv_completion_cb_mt>, user_data=0x2ed8d600) at /data/ZYH/ucc/src/components/tl/ucp/tl_ucp_sendrecv.h:192
#2  0x00007324ac0f4360 in ucc_tl_ucp_recv_nb_mt (buffer=0x2eef0050, msglen=256, mtype=UCC_MEMORY_TYPE_HOST, dest_group_rank=0, team=0x2e82b6b0, task=0x2ed8d600) at /data/ZYH/ucc/src/components/tl/ucp/tl_ucp_sendrecv.h:204
#3  0x00007324ac11be96 in ucc_tl_ucp_recv_nb (buffer=0x2eef0050, msglen=256, mtype=UCC_MEMORY_TYPE_HOST, dest_group_rank=0, team=0x2e82b6b0, task=0x2ed8d600) at ./tl_ucp_sendrecv.h:240
#4  0x00007324ac11c5c7 in ucc_tl_ucp_allreduce_knomial_progress (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:115
#5  0x00007324ac11b3cd in ucc_progress_queue_enqueue (pq=0x2e165110, task=0x2ed8d600) at /data/ZYH/ucc/src/core/ucc_progress_queue.h:35
#6  0x00007324ac11ccb4 in ucc_tl_ucp_allreduce_knomial_start (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:211
#7  0x00007324ac0fb2e2 in ucc_tl_ucp_service_allreduce (team=0x2e82b6b0, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., task_p=0x2e164fb0) at tl_ucp_service_coll.c:125
#8  0x00007325aa3d30a6 in ucc_service_allreduce (team=0x2eedf010, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., req=0x2eedf188) at core/ucc_service_coll.c:67
#9  0x00007325aa3cd148 in ucc_team_alloc_id (team=0x2eedf010) at core/ucc_team.c:609
#10 0x00007325aa3cc745 in ucc_team_create_test_single (context=0x2d6189c0, team=0x2eedf010) at core/ucc_team.c:443
#11 0x00007325aa3cc9fa in ucc_team_create_test (team=0x2eedf010) at core/ucc_team.c:493
#12 0x0000732586c8f221 in c10d::Comm::ucc_create_team(ucc_team*&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x0000732586c96f8d in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#14 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#16 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#17 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#18 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#19 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#20 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#21 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#22 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#23 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#24 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#25 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#26 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#27 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#28 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#29 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#30 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#31 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#32 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#33 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#34 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#35 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#36 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#37 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#38 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#39 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#40 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#41 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#42 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#43 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#44 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#45 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#46 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#47 0x00000000005bcc43 in _start ()
---
[HIT] ucp_worker_progress
#0  ucp_worker_progress (worker=0x2e65f5b0) at core/ucp_worker.c:3023
#1  0x00007324ac11b9ea in ucc_tl_ucp_test (task=0x2ed8d600) at ./tl_ucp_coll.h:408
#2  0x00007324ac11c61d in ucc_tl_ucp_allreduce_knomial_progress (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:123
#3  0x00007324ac11b3cd in ucc_progress_queue_enqueue (pq=0x2e165110, task=0x2ed8d600) at /data/ZYH/ucc/src/core/ucc_progress_queue.h:35
#4  0x00007324ac11ccb4 in ucc_tl_ucp_allreduce_knomial_start (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:211
#5  0x00007324ac0fb2e2 in ucc_tl_ucp_service_allreduce (team=0x2e82b6b0, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., task_p=0x2e164fb0) at tl_ucp_service_coll.c:125
#6  0x00007325aa3d30a6 in ucc_service_allreduce (team=0x2eedf010, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., req=0x2eedf188) at core/ucc_service_coll.c:67
#7  0x00007325aa3cd148 in ucc_team_alloc_id (team=0x2eedf010) at core/ucc_team.c:609
#8  0x00007325aa3cc745 in ucc_team_create_test_single (context=0x2d6189c0, team=0x2eedf010) at core/ucc_team.c:443
#9  0x00007325aa3cc9fa in ucc_team_create_test (team=0x2eedf010) at core/ucc_team.c:493
#10 0x0000732586c8f221 in c10d::Comm::ucc_create_team(ucc_team*&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x0000732586c96f8d in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#12 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#14 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#15 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#16 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#17 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#18 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#19 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#20 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#21 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#22 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#23 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#24 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#25 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#26 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#27 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#28 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#29 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#30 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#31 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#32 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#33 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#34 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#35 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#36 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#37 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#38 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#39 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#40 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#41 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#42 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#43 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#44 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#45 0x00000000005bcc43 in _start ()
---
[HIT] uct_worker_progress
#0  uct_worker_progress (worker=0x2e613c30) at /data/ZYH/ucx-1.18.1/src/uct/api/uct.h:2813
#1  ucp_worker_progress (worker=0x2e65f5b0) at core/ucp_worker.c:3027
#2  0x00007324ac11b9ea in ucc_tl_ucp_test (task=0x2ed8d600) at ./tl_ucp_coll.h:408
#3  0x00007324ac11c61d in ucc_tl_ucp_allreduce_knomial_progress (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:123
#4  0x00007324ac11b3cd in ucc_progress_queue_enqueue (pq=0x2e165110, task=0x2ed8d600) at /data/ZYH/ucc/src/core/ucc_progress_queue.h:35
#5  0x00007324ac11ccb4 in ucc_tl_ucp_allreduce_knomial_start (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:211
#6  0x00007324ac0fb2e2 in ucc_tl_ucp_service_allreduce (team=0x2e82b6b0, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., task_p=0x2e164fb0) at tl_ucp_service_coll.c:125
#7  0x00007325aa3d30a6 in ucc_service_allreduce (team=0x2eedf010, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., req=0x2eedf188) at core/ucc_service_coll.c:67
#8  0x00007325aa3cd148 in ucc_team_alloc_id (team=0x2eedf010) at core/ucc_team.c:609
#9  0x00007325aa3cc745 in ucc_team_create_test_single (context=0x2d6189c0, team=0x2eedf010) at core/ucc_team.c:443
#10 0x00007325aa3cc9fa in ucc_team_create_test (team=0x2eedf010) at core/ucc_team.c:493
#11 0x0000732586c8f221 in c10d::Comm::ucc_create_team(ucc_team*&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#12 0x0000732586c96f8d in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#14 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#15 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#16 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#17 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#18 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#19 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#20 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#21 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#22 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#23 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#24 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#25 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#26 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#27 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#28 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#29 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#30 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#31 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#32 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#33 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#34 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#35 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#36 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#37 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#38 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#39 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#40 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#41 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#42 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#43 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#44 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#45 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#46 0x00000000005bcc43 in _start ()
---
[HIT] uct_ep_destroy
#0  uct_ep_destroy (ep=0x2f0e0e80) at base/uct_iface.c:751
#1  0x00007324af08bd22 in ucp_proxy_ep_replace (proxy_ep=0x2f0e0e80) at core/ucp_proxy_ep.c:209
#2  0x00007324af2618cf in ucp_wireup_eps_progress (arg=0x7324af2f1140) at wireup/wireup.c:499
#3  0x0000732553592223 in ucs_callbackq_oneshot_elems_dispatch (cbq=0x2e613c30) at datastruct/callbackq.c:457
#4  0x0000732553592305 in ucs_callbackq_proxy_callback (arg=0x2e613c30) at datastruct/callbackq.c:477
#5  0x00007324af09a8c4 in ucs_callbackq_dispatch (cbq=0x2e613c30) at /data/ZYH/ucx-1.18.1/src/ucs/datastruct/callbackq.h:215
#6  0x00007324af0aabfe in uct_worker_progress (worker=0x2e613c30) at /data/ZYH/ucx-1.18.1/src/uct/api/uct.h:2813
#7  ucp_worker_progress (worker=0x2e65f5b0) at core/ucp_worker.c:3027
#8  0x00007324ac11b9ea in ucc_tl_ucp_test (task=0x2ed8d600) at ./tl_ucp_coll.h:408
#9  0x00007324ac11c61d in ucc_tl_ucp_allreduce_knomial_progress (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:123
#10 0x00007324ac11b3cd in ucc_progress_queue_enqueue (pq=0x2e165110, task=0x2ed8d600) at /data/ZYH/ucc/src/core/ucc_progress_queue.h:35
#11 0x00007324ac11ccb4 in ucc_tl_ucp_allreduce_knomial_start (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:211
#12 0x00007324ac0fb2e2 in ucc_tl_ucp_service_allreduce (team=0x2e82b6b0, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., task_p=0x2e164fb0) at tl_ucp_service_coll.c:125
#13 0x00007325aa3d30a6 in ucc_service_allreduce (team=0x2eedf010, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., req=0x2eedf188) at core/ucc_service_coll.c:67
#14 0x00007325aa3cd148 in ucc_team_alloc_id (team=0x2eedf010) at core/ucc_team.c:609
#15 0x00007325aa3cc745 in ucc_team_create_test_single (context=0x2d6189c0, team=0x2eedf010) at core/ucc_team.c:443
#16 0x00007325aa3cc9fa in ucc_team_create_test (team=0x2eedf010) at core/ucc_team.c:493
#17 0x0000732586c8f221 in c10d::Comm::ucc_create_team(ucc_team*&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#18 0x0000732586c96f8d in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#19 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#20 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#21 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#22 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#23 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#24 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#25 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#26 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#27 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#28 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#29 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#30 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#31 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#32 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#33 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#34 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#35 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#36 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#37 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#38 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#39 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#40 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#41 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#42 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#43 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#44 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#45 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#46 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#47 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#48 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#49 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
---
[HIT] ucp_request_free
#0  ucp_request_free (request=0x2effa0d0) at core/ucp_request.c:236
#1  0x00007324ac0fa0fb in ucc_tl_ucp_send_completion_cb_mt (request=0x2effa0d0, status=UCS_OK, user_data=0x2ed8d600) at tl_ucp_coll.c:123
#2  0x00007324af1f4060 in ucp_request_complete_send (status=UCS_OK, req=0x2eff9fc0) at /data/ZYH/ucx-1.18.1/src/ucp/core/ucp_request.inl:255
#3  ucp_eager_short_progress (self=0x2effa0a0) at tag/eager_single.c:43
#4  0x00007324af2641b5 in ucp_request_try_send (req=0x2eff9fc0) at /data/ZYH/ucx-1.18.1/src/ucp/core/ucp_request.inl:307
#5  ucp_request_send (req=0x2eff9fc0) at /data/ZYH/ucx-1.18.1/src/ucp/core/ucp_request.inl:330
#6  ucp_wireup_replay_pending_request (self=0x2effa0a0, ucp_ep=0x7324af2f1140) at wireup/wireup.c:985
#7  0x00007324af264278 in ucp_wireup_replay_pending_requests (ucp_ep=0x7324af2f1140, tmp_pending_queue=0x7ffd0a04a6f0) at wireup/wireup.c:997
#8  0x00007324af2618fe in ucp_wireup_eps_progress (arg=0x7324af2f1140) at wireup/wireup.c:503
#9  0x0000732553592223 in ucs_callbackq_oneshot_elems_dispatch (cbq=0x2e613c30) at datastruct/callbackq.c:457
#10 0x0000732553592305 in ucs_callbackq_proxy_callback (arg=0x2e613c30) at datastruct/callbackq.c:477
#11 0x00007324af09a8c4 in ucs_callbackq_dispatch (cbq=0x2e613c30) at /data/ZYH/ucx-1.18.1/src/ucs/datastruct/callbackq.h:215
#12 0x00007324af0aabfe in uct_worker_progress (worker=0x2e613c30) at /data/ZYH/ucx-1.18.1/src/uct/api/uct.h:2813
#13 ucp_worker_progress (worker=0x2e65f5b0) at core/ucp_worker.c:3027
#14 0x00007324ac11b9ea in ucc_tl_ucp_test (task=0x2ed8d600) at ./tl_ucp_coll.h:408
#15 0x00007324ac11c61d in ucc_tl_ucp_allreduce_knomial_progress (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:123
#16 0x00007324ac11b3cd in ucc_progress_queue_enqueue (pq=0x2e165110, task=0x2ed8d600) at /data/ZYH/ucc/src/core/ucc_progress_queue.h:35
#17 0x00007324ac11ccb4 in ucc_tl_ucp_allreduce_knomial_start (coll_task=0x2ed8d600) at allreduce/allreduce_knomial.c:211
#18 0x00007324ac0fb2e2 in ucc_tl_ucp_service_allreduce (team=0x2e82b6b0, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., task_p=0x2e164fb0) at tl_ucp_service_coll.c:125
#19 0x00007325aa3d30a6 in ucc_service_allreduce (team=0x2eedf010, sbuf=0x2e61b520, rbuf=0x2e61b620, dt=64, count=32, op=UCC_OP_BAND, subset=..., req=0x2eedf188) at core/ucc_service_coll.c:67
#20 0x00007325aa3cd148 in ucc_team_alloc_id (team=0x2eedf010) at core/ucc_team.c:609
#21 0x00007325aa3cc745 in ucc_team_create_test_single (context=0x2d6189c0, team=0x2eedf010) at core/ucc_team.c:443
#22 0x00007325aa3cc9fa in ucc_team_create_test (team=0x2eedf010) at core/ucc_team.c:493
#23 0x0000732586c8f221 in c10d::Comm::ucc_create_team(ucc_team*&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#24 0x0000732586c96f8d in c10d::ProcessGroupUCC::initComm(c10::Device) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#25 0x0000732586ca6a85 in c10d::ProcessGroupUCC::recv(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#26 0x00007325d8d4330a in pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}::operator()(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int) const (__closure=0x2baff818, c=0x2a5b0670, args#0=std::vector of length 1, capacity 1 = {...}, args#1=0, args#2=0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:136
#27 0x00007325d8e1dd9d in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call_impl<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, 0ul, 1ul, 2ul, 3ul, pybind11::gil_scoped_release>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::gil_scoped_release&&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1631
#28 0x00007325d8de9728 in pybind11::detail::argument_loader<c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int>::call<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, pybind11::gil_scoped_release, pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&>(pybind11::cpp_function::cpp_function<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&) && (this=0x7ffd0a04b460, f=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/cast.h:1600
#29 0x00007325d8d9ae95 in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::operator()(pybind11::detail::function_call&) const (__closure=0x0, call=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:278
#30 0x00007325d8d9af6f in pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(pybind11::cpp_function::initialize<c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> >, c10d::ProcessGroup, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::call_guard<pybind11::gil_scoped_release>, char [113]>(c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (c10d::ProcessGroup::*)(std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int)#1}&&, c10::intrusive_ptr<c10d::Work, c10::detail::intrusive_target_default_null_type<c10d::Work> > (*)(c10d::ProcessGroup*, std::vector<at::Tensor, std::allocator<at::Tensor> >&, int, int), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::call_guard<pybind11::gil_scoped_release> const&, char const (&) [113])::{lambda(pybind11::detail::function_call&)#1}::_FUN(pybind11::detail::function_call&) () at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:249
#31 0x00007325d79e0da1 in pybind11::cpp_function::dispatcher (self=0x7324b1312010, args_in=0x7325da942340, kwargs_in=0x0) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:971
#32 0x0000000000528db7 in cfunction_call (func=0x7324b14f2110, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/methodobject.c:542
#33 0x000000000050454c in _PyObject_MakeTpCall (tstate=0x8a9518 <_PyRuntime+166328>, callable=0x7324b14f2110, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.13/Objects/call.c:214
#34 0x0000000000511cf6 in _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf031e0, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:4769
#35 0x0000000000539503 in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf031e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#36 _PyEval_Vector (kwnames=<optimized out>, argcount=1, args=0x732579bbea58, locals=0x0, func=<optimized out>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#37 _PyFunction_Vectorcall (func=<optimized out>, stack=0x732579bbea58, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:393
#38 0x000000000054358c in _PyVectorcall_Call (kwargs=<optimized out>, tuple=<optimized out>, callable=0x7324b13cd4e0, func=0x539390 <_PyFunction_Vectorcall>, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:257
#39 _PyObject_Call (kwargs=<optimized out>, args=<optimized out>, callable=0x7324b13cd4e0, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:328
#40 PyObject_Call (callable=0x7324b13cd4e0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/call.c:355
#41 0x0000000000515f58 in do_call_core (use_tracing=<optimized out>, kwdict=0x7324af61a7c0, callargs=0x7325dadc1e40, func=0x7324b13cd4e0, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:7349
#42 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=<optimized out>, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:5376
#43 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#44 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#45 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#46 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#47 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#48 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#49 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
---
[HIT] ucp_rkey_destroy
#0  ucp_rkey_destroy (rkey=0x732458005080) at core/ucp_rkey.c:1006
#1  0x00007324af157b9e in ucp_proto_rndv_rkey_destroy (req=0x2f009d00) at rndv/proto_rndv.inl:156
#2  ucp_proto_rndv_rtr_common_complete (dt_mask=255, req=0x2f009d00) at rndv/rndv_rtr.c:79
#3  ucp_proto_rndv_rtr_data_received (req=0x2f009d00, in_buffer=1) at rndv/rndv_rtr.c:89
#4  0x00007324af163ff8 in ucp_proto_rndv_handle_data (arg=0x2d09cda0, data=0x2d46d082, length=32, flags=0) at rndv/rndv_rtr.c:530
#5  0x00007324af18dccf in ucp_rndv_data_handler_inner (flags=0, length=32, data=0x2d46d082, arg=0x2d09cda0) at rndv/rndv.c:2396
#6  ucp_rndv_data_handler (arg=0x2d09cda0, data=0x2d46d082, length=32, flags=0) at rndv/rndv.c:2385
#7  0x000073249e8c7a27 in uct_iface_invoke_am (iface=0x2d3e3020, id=12 '\f', data=0x2d46d082, length=32, flags=0) at /data/ZYH/ucx-1.18.1/src/uct/base/uct_iface.h:948
#8  0x000073249e8cb829 in uct_rc_mlx5_iface_common_am_handler (poll_flags=2, byte_len=34, flags=0, hdr=0x2d46d080, cqe=0x2d46d0c0, iface=0x2d3e3020) at rc/rc_mlx5.inl:412
#9  uct_rc_mlx5_iface_common_poll_rx (poll_flags=2, iface=0x2d3e3020) at rc/rc_mlx5.inl:1492
#10 uct_rc_mlx5_iface_progress (flags=2, arg=0x2d3e3020) at rc/rc_mlx5_iface.c:122
#11 uct_rc_mlx5_iface_progress_cyclic (arg=0x2d3e3020) at rc/rc_mlx5_iface.c:132
#12 0x00007324af09a8c4 in ucs_callbackq_dispatch (cbq=0x2d099fe0) at /data/ZYH/ucx-1.18.1/src/ucs/datastruct/callbackq.h:215
#13 0x00007324af0aabfe in uct_worker_progress (worker=0x2d099fe0) at /data/ZYH/ucx-1.18.1/src/uct/api/uct.h:2813
#14 ucp_worker_progress (worker=0x2d09cda0) at core/ucp_worker.c:3027
#15 0x0000732586ca727e in c10d::Comm::progress_loop() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x00007325aa4ecdb4 in ?? () from /lib/x86_64-linux-gnu/libstdc++.so.6
#17 0x00007325daa9caa4 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:447
#18 0x00007325dab29c3c in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:78
---
[HIT] ucp_request_check_status
#0  ucp_request_check_status (request=0x2f00a1d0) at core/ucp_request.c:169
#1  0x0000732586c8dff1 in c10d::Comm::ucx_disconnect_eps(std::vector<ucp_ep*, std::allocator<ucp_ep*> >&, std::shared_ptr<c10d::torch_ucc_oob_coll_info_t>) () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#2  0x0000732586c8fbfc in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#3  0x0000732586c9000d in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#4  0x00007325d8d254dd in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::reset_ (this=0x7324afdf4248) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:297
#5  0x00007325d8d0094a in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::~intrusive_ptr (this=0x7324afdf4248, __in_chrg=<optimized out>) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:377
#6  0x00007325d8d3fe29 in pybind11::class_<c10d::ProcessGroup, c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >, c10d::PyProcessGroup>::dealloc (v_h=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:1926
#7  0x00007325d79dce78 in pybind11::detail::clear_instance (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:434
#8  0x00007325d79dcfb6 in pybind11::detail::pybind11_object_dealloc (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:467
#9  0x0000000000522608 in _Py_Dealloc (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/object.c:2390
#10 Py_DECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:538
#11 Py_XDECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:602
#12 _PyFrame_Clear (frame=0x7325daf03140) at /usr/local/src/conda/python-3.11.13/Python/frame.c:141
#13 0x0000000000511902 in _PyEvalFrameClearAndPop (frame=0x7325daf03140, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6406
#14 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=0x7325daf03090, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:2435
#15 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#16 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#17 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#18 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#19 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#20 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#21 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#22 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#23 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#24 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#25 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#26 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#27 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#28 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#29 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#30 0x00000000005bcc43 in _start ()
---
[HIT] ucp_worker_destroy
#0  ucp_worker_destroy (worker=0x2e65f5b0) at core/ucp_worker.c:2880
#1  0x00007324ac0f6531 in ucc_tl_ucp_worker_cleanup (worker=...) at tl_ucp_context.c:436
#2  0x00007324ac0f66d5 in ucc_tl_ucp_context_t_cleanup (self=0x2cd707a0) at tl_ucp_context.c:464
#3  0x00007325535cb331 in ucs_class_call_cleanup_chain (cls=0x7324ac1627a0 <ucc_tl_ucp_context_t_class>, obj=0x2cd707a0, limit=-1) at type/class.c:56
#4  0x00007324ac0f191c in ucc_tl_ucp_context_t_delete (self=0x2cd707a0) at tl_ucp.c:297
#5  0x00007325aa3c9efb in ucc_context_destroy (context=0x2d6189c0) at core/ucc_context.c:931
#6  0x0000732586cc1d55 in c10d::CommUCC::~CommUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#7  0x0000732586ca70aa in c10d::Comm::~Comm() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x0000732586caab5e in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x0000732586c8fdf9 in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#10 0x0000732586c9000d in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x00007325d8d254dd in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::reset_ (this=0x7324afdf4248) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:297
#12 0x00007325d8d0094a in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::~intrusive_ptr (this=0x7324afdf4248, __in_chrg=<optimized out>) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:377
#13 0x00007325d8d3fe29 in pybind11::class_<c10d::ProcessGroup, c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >, c10d::PyProcessGroup>::dealloc (v_h=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:1926
#14 0x00007325d79dce78 in pybind11::detail::clear_instance (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:434
#15 0x00007325d79dcfb6 in pybind11::detail::pybind11_object_dealloc (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:467
#16 0x0000000000522608 in _Py_Dealloc (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/object.c:2390
#17 Py_DECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:538
#18 Py_XDECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:602
#19 _PyFrame_Clear (frame=0x7325daf03140) at /usr/local/src/conda/python-3.11.13/Python/frame.c:141
#20 0x0000000000511902 in _PyEvalFrameClearAndPop (frame=0x7325daf03140, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6406
#21 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=0x7325daf03090, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:2435
#22 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#23 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#24 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#25 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#26 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#27 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#28 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#29 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#30 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#31 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#32 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#33 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#34 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#35 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#36 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#37 0x00000000005bcc43 in _start ()
---
[HIT] uct_iface_close
#0  uct_iface_close (iface=0x2e610f50) at base/uct_iface.c:394
#1  0x00007324af0a081e in ucp_worker_uct_iface_close (wiface=0x2e167100) at core/ucp_worker.c:835
#2  0x00007324af0a4697 in ucp_worker_iface_cleanup (wiface=0x2e167100) at core/ucp_worker.c:1531
#3  0x00007324af0a34a0 in ucp_worker_close_ifaces (worker=0x2e65f5b0) at core/ucp_worker.c:1195
#4  0x00007324af0aa095 in ucp_worker_destroy (worker=0x2e65f5b0) at core/ucp_worker.c:2922
#5  0x00007324ac0f6531 in ucc_tl_ucp_worker_cleanup (worker=...) at tl_ucp_context.c:436
#6  0x00007324ac0f66d5 in ucc_tl_ucp_context_t_cleanup (self=0x2cd707a0) at tl_ucp_context.c:464
#7  0x00007325535cb331 in ucs_class_call_cleanup_chain (cls=0x7324ac1627a0 <ucc_tl_ucp_context_t_class>, obj=0x2cd707a0, limit=-1) at type/class.c:56
#8  0x00007324ac0f191c in ucc_tl_ucp_context_t_delete (self=0x2cd707a0) at tl_ucp.c:297
#9  0x00007325aa3c9efb in ucc_context_destroy (context=0x2d6189c0) at core/ucc_context.c:931
#10 0x0000732586cc1d55 in c10d::CommUCC::~CommUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x0000732586ca70aa in c10d::Comm::~Comm() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#12 0x0000732586caab5e in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x0000732586c8fdf9 in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#14 0x0000732586c9000d in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x00007325d8d254dd in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::reset_ (this=0x7324afdf4248) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:297
#16 0x00007325d8d0094a in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::~intrusive_ptr (this=0x7324afdf4248, __in_chrg=<optimized out>) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:377
#17 0x00007325d8d3fe29 in pybind11::class_<c10d::ProcessGroup, c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >, c10d::PyProcessGroup>::dealloc (v_h=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:1926
#18 0x00007325d79dce78 in pybind11::detail::clear_instance (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:434
#19 0x00007325d79dcfb6 in pybind11::detail::pybind11_object_dealloc (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:467
#20 0x0000000000522608 in _Py_Dealloc (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/object.c:2390
#21 Py_DECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:538
#22 Py_XDECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:602
#23 _PyFrame_Clear (frame=0x7325daf03140) at /usr/local/src/conda/python-3.11.13/Python/frame.c:141
#24 0x0000000000511902 in _PyEvalFrameClearAndPop (frame=0x7325daf03140, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6406
#25 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=0x7325daf03090, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:2435
#26 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#27 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#28 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#29 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#30 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#31 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#32 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#33 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#34 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#35 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#36 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#37 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#38 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#39 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#40 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#41 0x00000000005bcc43 in _start ()
---
[HIT] uct_md_mem_dereg
#0  uct_md_mem_dereg (md=0x2e61a180, memh=0x2e164d30) at base/uct_md.c:592
#1  0x0000732579ab0716 in uct_iface_mem_free (mem=0x7ffd0a04b060) at base/uct_mem.c:436
#2  0x0000732579ab0a8a in uct_iface_mp_chunk_release_inner (chunk=0x73255163e018, mp=0x2e7d9c18) at base/uct_mem.c:493
#3  uct_iface_mp_chunk_release (mp=0x2e7d9c18, chunk=0x73255163e018) at base/uct_mem.c:478
#4  0x00007325535964c3 in ucs_mpool_cleanup (mp=0x2e7d9c18, leak_check=0) at datastruct/mpool.c:191
#5  0x00007325516cb894 in uct_ud_iface_t_cleanup (self=0x2e7d9640) at ud/base/ud_iface.c:607
#6  0x00007325535cb331 in ucs_class_call_cleanup_chain (cls=0x7325516fef80 <uct_ud_verbs_iface_t_class>, obj=0x2e7d9640, limit=-1) at type/class.c:56
#7  0x00007325516e5915 in uct_ud_verbs_iface_t_delete (self=0x2e7d9640) at ud/verbs/ud_verbs.c:831
#8  0x0000732579ab2e1e in uct_iface_close (iface=0x2e7d9640) at base/uct_iface.c:395
#9  0x00007324af0a081e in ucp_worker_uct_iface_close (wiface=0x2e686de0) at core/ucp_worker.c:835
#10 0x00007324af0a4697 in ucp_worker_iface_cleanup (wiface=0x2e686de0) at core/ucp_worker.c:1531
#11 0x00007324af0a34a0 in ucp_worker_close_ifaces (worker=0x2e65f5b0) at core/ucp_worker.c:1195
#12 0x00007324af0aa095 in ucp_worker_destroy (worker=0x2e65f5b0) at core/ucp_worker.c:2922
#13 0x00007324ac0f6531 in ucc_tl_ucp_worker_cleanup (worker=...) at tl_ucp_context.c:436
#14 0x00007324ac0f66d5 in ucc_tl_ucp_context_t_cleanup (self=0x2cd707a0) at tl_ucp_context.c:464
#15 0x00007325535cb331 in ucs_class_call_cleanup_chain (cls=0x7324ac1627a0 <ucc_tl_ucp_context_t_class>, obj=0x2cd707a0, limit=-1) at type/class.c:56
#16 0x00007324ac0f191c in ucc_tl_ucp_context_t_delete (self=0x2cd707a0) at tl_ucp.c:297
#17 0x00007325aa3c9efb in ucc_context_destroy (context=0x2d6189c0) at core/ucc_context.c:931
#18 0x0000732586cc1d55 in c10d::CommUCC::~CommUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#19 0x0000732586ca70aa in c10d::Comm::~Comm() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#20 0x0000732586caab5e in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#21 0x0000732586c8fdf9 in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#22 0x0000732586c9000d in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#23 0x00007325d8d254dd in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::reset_ (this=0x7324afdf4248) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:297
#24 0x00007325d8d0094a in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::~intrusive_ptr (this=0x7324afdf4248, __in_chrg=<optimized out>) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:377
#25 0x00007325d8d3fe29 in pybind11::class_<c10d::ProcessGroup, c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >, c10d::PyProcessGroup>::dealloc (v_h=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:1926
#26 0x00007325d79dce78 in pybind11::detail::clear_instance (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:434
#27 0x00007325d79dcfb6 in pybind11::detail::pybind11_object_dealloc (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:467
#28 0x0000000000522608 in _Py_Dealloc (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/object.c:2390
#29 Py_DECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:538
#30 Py_XDECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:602
#31 _PyFrame_Clear (frame=0x7325daf03140) at /usr/local/src/conda/python-3.11.13/Python/frame.c:141
#32 0x0000000000511902 in _PyEvalFrameClearAndPop (frame=0x7325daf03140, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6406
#33 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=0x7325daf03090, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:2435
#34 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#35 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#36 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#37 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#38 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#39 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#40 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#41 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#42 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#43 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#44 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#45 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#46 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#47 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#48 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#49 0x00000000005bcc43 in _start ()
---
[HIT] ucp_cleanup
#0  ucp_cleanup (context=0x2e611770) at core/ucp_context.c:2354
#1  0x00007324ac0f653d in ucc_tl_ucp_worker_cleanup (worker=...) at tl_ucp_context.c:437
#2  0x00007324ac0f66d5 in ucc_tl_ucp_context_t_cleanup (self=0x2cd707a0) at tl_ucp_context.c:464
#3  0x00007325535cb331 in ucs_class_call_cleanup_chain (cls=0x7324ac1627a0 <ucc_tl_ucp_context_t_class>, obj=0x2cd707a0, limit=-1) at type/class.c:56
#4  0x00007324ac0f191c in ucc_tl_ucp_context_t_delete (self=0x2cd707a0) at tl_ucp.c:297
#5  0x00007325aa3c9efb in ucc_context_destroy (context=0x2d6189c0) at core/ucc_context.c:931
#6  0x0000732586cc1d55 in c10d::CommUCC::~CommUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#7  0x0000732586ca70aa in c10d::Comm::~Comm() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#8  0x0000732586caab5e in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#9  0x0000732586c8fdf9 in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#10 0x0000732586c9000d in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#11 0x00007325d8d254dd in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::reset_ (this=0x7324afdf4248) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:297
#12 0x00007325d8d0094a in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::~intrusive_ptr (this=0x7324afdf4248, __in_chrg=<optimized out>) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:377
#13 0x00007325d8d3fe29 in pybind11::class_<c10d::ProcessGroup, c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >, c10d::PyProcessGroup>::dealloc (v_h=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:1926
#14 0x00007325d79dce78 in pybind11::detail::clear_instance (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:434
#15 0x00007325d79dcfb6 in pybind11::detail::pybind11_object_dealloc (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:467
#16 0x0000000000522608 in _Py_Dealloc (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/object.c:2390
#17 Py_DECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:538
#18 Py_XDECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:602
#19 _PyFrame_Clear (frame=0x7325daf03140) at /usr/local/src/conda/python-3.11.13/Python/frame.c:141
#20 0x0000000000511902 in _PyEvalFrameClearAndPop (frame=0x7325daf03140, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6406
#21 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=0x7325daf03090, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:2435
#22 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#23 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#24 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#25 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#26 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#27 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#28 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#29 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#30 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#31 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#32 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#33 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#34 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#35 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#36 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#37 0x00000000005bcc43 in _start ()
---
[HIT] ucm_unset_event_handler
#0  ucm_unset_event_handler (events=2228224, cb=0x7325535b2100 <ucs_rcache_unmapped_callback>, arg=0x2e616e70) at event/event.c:642
#1  0x00007325535b4d9b in ucs_rcache_t_cleanup (self=0x2e616e70) at memory/rcache.c:1391
#2  0x00007325535cb331 in ucs_class_call_cleanup_chain (cls=0x7325535fa420 <ucs_rcache_t_class>, obj=0x2e616e70, limit=-1) at type/class.c:56
#3  0x00007325535b5076 in ucs_rcache_destroy (self=0x2e616e70) at memory/rcache.c:1421
#4  0x00007324af088448 in ucp_mem_rcache_cleanup (context=0x2e611770) at core/ucp_mm.c:1713
#5  0x00007324af03f289 in ucp_cleanup (context=0x2e611770) at core/ucp_context.c:2355
#6  0x00007324ac0f653d in ucc_tl_ucp_worker_cleanup (worker=...) at tl_ucp_context.c:437
#7  0x00007324ac0f66d5 in ucc_tl_ucp_context_t_cleanup (self=0x2cd707a0) at tl_ucp_context.c:464
#8  0x00007325535cb331 in ucs_class_call_cleanup_chain (cls=0x7324ac1627a0 <ucc_tl_ucp_context_t_class>, obj=0x2cd707a0, limit=-1) at type/class.c:56
#9  0x00007324ac0f191c in ucc_tl_ucp_context_t_delete (self=0x2cd707a0) at tl_ucp.c:297
#10 0x00007325aa3c9efb in ucc_context_destroy (context=0x2d6189c0) at core/ucc_context.c:931
#11 0x0000732586cc1d55 in c10d::CommUCC::~CommUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#12 0x0000732586ca70aa in c10d::Comm::~Comm() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#13 0x0000732586caab5e in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#14 0x0000732586c8fdf9 in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#15 0x0000732586c9000d in c10d::ProcessGroupUCC::~ProcessGroupUCC() () from /home/e0355@innostar-ic.com/miniconda3/envs/torch-dbg/lib/python3.11/site-packages/torch_ucc-1.0.0-py3.11-linux-x86_64.egg/torch_ucc.cpython-311-x86_64-linux-gnu.so
#16 0x00007325d8d254dd in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::reset_ (this=0x7324afdf4248) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:297
#17 0x00007325d8d0094a in c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >::~intrusive_ptr (this=0x7324afdf4248, __in_chrg=<optimized out>) at /data/ZYH/pytorch/c10/util/intrusive_ptr.h:377
#18 0x00007325d8d3fe29 in pybind11::class_<c10d::ProcessGroup, c10::intrusive_ptr<c10d::ProcessGroup, c10::detail::intrusive_target_default_null_type<c10d::ProcessGroup> >, c10d::PyProcessGroup>::dealloc (v_h=...) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/pybind11.h:1926
#19 0x00007325d79dce78 in pybind11::detail::clear_instance (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:434
#20 0x00007325d79dcfb6 in pybind11::detail::pybind11_object_dealloc (self=0x7324afdf4230) at /data/ZYH/pytorch/third_party/pybind11/include/pybind11/detail/class.h:467
#21 0x0000000000522608 in _Py_Dealloc (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Objects/object.c:2390
#22 Py_DECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:538
#23 Py_XDECREF (op=<optimized out>) at /usr/local/src/conda/python-3.11.13/Include/object.h:602
#24 _PyFrame_Clear (frame=0x7325daf03140) at /usr/local/src/conda/python-3.11.13/Python/frame.c:141
#25 0x0000000000511902 in _PyEvalFrameClearAndPop (frame=0x7325daf03140, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6406
#26 _PyEval_EvalFrameDefault (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, frame=0x7325daf03090, frame@entry=0x7325daf03020, throwflag=throwflag@entry=0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:2435
#27 0x00000000005cd0aa in _PyEval_EvalFrame (throwflag=0, frame=0x7325daf03020, tstate=0x8a9518 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.13/Include/internal/pycore_ceval.h:73
#28 _PyEval_Vector (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, func=func@entry=0x7325dadca0c0, locals=locals@entry=0x7325dadea700, args=args@entry=0x0, argcount=argcount@entry=0, kwnames=kwnames@entry=0x0) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:6434
#29 0x00000000005cc77f in PyEval_EvalCode (co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/ceval.c:1148
#30 0x00000000005ed557 in run_eval_code_obj (tstate=tstate@entry=0x8a9518 <_PyRuntime+166328>, co=co@entry=0x7325dadb8030, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1741
#31 0x00000000005e9080 in run_mod (mod=mod@entry=0x2783f4b0, filename=filename@entry=0x7325dadf3050, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, flags=flags@entry=0x7ffd0a04bef8, arena=arena@entry=0x7325dad13670) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1762
#32 0x00000000005fde72 in pyrun_file (fp=fp@entry=0x277cf5a0, filename=filename@entry=0x7325dadf3050, start=start@entry=257, globals=globals@entry=0x7325dadea700, locals=locals@entry=0x7325dadea700, closeit=closeit@entry=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:1657
#33 0x00000000005fd28f in _PyRun_SimpleFileObject (fp=0x277cf5a0, filename=0x7325dadf3050, closeit=1, flags=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:440
#34 0x00000000005fcfb3 in _PyRun_AnyFileObject (fp=0x277cf5a0, filename=filename@entry=0x7325dadf3050, closeit=closeit@entry=1, flags=flags@entry=0x7ffd0a04bef8) at /usr/local/src/conda/python-3.11.13/Python/pythonrun.c:79
#35 0x00000000005f7dae in pymain_run_file_obj (skip_source_first_line=0, filename=0x7325dadf3050, program_name=0x7325dad8e630) at /usr/local/src/conda/python-3.11.13/Modules/main.c:360
#36 pymain_run_file (config=0x88f560 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:379
#37 pymain_run_python (exitcode=0x7ffd0a04bef0) at /usr/local/src/conda/python-3.11.13/Modules/main.c:605
#38 Py_RunMain () at /usr/local/src/conda/python-3.11.13/Modules/main.c:684
#39 0x00000000005bcdf9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.13/Modules/main.c:738
#40 0x00007325daa2a1ca in __libc_start_call_main (main=main@entry=0x5bcd50 <main>, argc=argc@entry=3, argv=argv@entry=0x7ffd0a04c158) at ../sysdeps/nptl/libc_start_call_main.h:58
#41 0x00007325daa2a28b in __libc_start_main_impl (main=0x5bcd50 <main>, argc=3, argv=0x7ffd0a04c158, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffd0a04c148) at ../csu/libc-start.c:360
#42 0x00000000005bcc43 in _start ()